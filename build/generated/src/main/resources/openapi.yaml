openapi: 3.0.1
info:
  title: Approved Premises
  version: 1.0.0
servers:
- url: /
paths:
  /premises:
    get:
      parameters:
      - description: "If given, only premises for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "If given, only premises within this region will be returned"
        explode: false
        in: header
        name: X-User-Region
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Premises"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Lists all approved premises, optionally for the given service"
      tags:
      - Premises
    post:
      parameters:
      - description: "If given, persist the service name against this property"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPremises"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Premises"
          description: new premises added
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Add a new premises
      tags:
      - Premises
      x-codegen-request-body-name: body
  /premises/summary:
    get:
      parameters:
      - description: "If given, only premises for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: ID of the probation region to filter by
        explode: true
        in: query
        name: probationRegionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: ID of the AP area to filter by
        explode: true
        in: query
        name: apAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PremisesSummary"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a list of premises
      tags:
      - Premises
  /premises/{premisesId}:
    get:
      parameters:
      - description: ID of the premises to return
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Premises"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns an approved premises
      tags:
      - Premises
    put:
      parameters:
      - description: ID of the premises
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePremises"
        description: Information to update the premises with
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Premises"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Updates a premises
      tags:
      - Operations on premises
      x-codegen-request-body-name: body
  /premises/{premisesId}/staff:
    get:
      parameters:
      - description: ID of the premises to return staff for
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/StaffMember"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the staff that work at an approved premises
      tags:
      - Premises
  /premises/{premisesId}/bookings:
    get:
      parameters:
      - description: ID of the premises to get bookings for
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Booking"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns all bookings for an approved premises
      tags:
      - Operations on premises
    post:
      parameters:
      - description: ID of the premises to create a booking for
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewBooking"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: An existing booking for the given bed has overlapping dates
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Adds a new booking for an approved premises
      tags:
      - Operations on premises
      x-codegen-request-body-name: body
  /premises/{premisesId}/summary:
    get:
      parameters:
      - description: ID of the premises to get bookings for
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedPremisesSummary"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a summary of bookings for an approved premises
      tags:
      - Operations on premises
  /premises/{premisesId}/bookings/{bookingId}:
    get:
      parameters:
      - description: ID of the premises the booking is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a specific booking for an approved premises
      tags:
      - Operations on premises
  /premises/{premisesId}/bookings/{bookingId}/arrivals:
    post:
      parameters:
      - description: ID of the premises the booking is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewArrival"
        description: details of the arrival
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Arrival"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts an arrival to a specified booking
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /premises/{premisesId}/bookings/{bookingId}/extensions:
    post:
      parameters:
      - description: ID of the premises the booking is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewExtension"
        description: details of the extension
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Extension"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts an extension to a specified approved premises booking
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /premises/{premisesId}/bookings/{bookingId}/date-changes:
    post:
      parameters:
      - description: ID of the premises the booking is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewDateChange"
        description: details of the extension
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DateChange"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts a change to the dates for a specified approved premises booking
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /premises/{premisesId}/bookings/{bookingId}/departures:
    post:
      parameters:
      - description: ID of the premises the booking is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewDeparture"
        description: details of the departure
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Departure"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts a departure to a specified booking
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /premises/{premisesId}/bookings/{bookingId}/cancellations:
    post:
      parameters:
      - description: ID of the premises the cancellation is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewCancellation"
        description: details of the cancellation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cancellation"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts a cancellation to a specified approved premises booking
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /premises/{premisesId}/bookings/{bookingId}/confirmations:
    post:
      parameters:
      - description: ID of the premises the confirmation is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewConfirmation"
        description: details of the confirmation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Confirmation"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts a confirmation to a specified Temporary Accommodation booking
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /premises/{premisesId}/bookings/{bookingId}/turnarounds:
    post:
      parameters:
      - description: ID of the premises the turnaround is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTurnaround"
        description: details of the turnaround
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Turnaround"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: An existing booking for the given bed has overlapping dates
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts a turnaround to a specified Temporary Accommodation booking
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /premises/{premisesId}/beds:
    get:
      parameters:
      - description: ID of the premises to list the beds for
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BedSummary"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all beds for the given premises
      tags:
      - Rooms
  /premises/{premisesId}/beds/{bedId}:
    get:
      parameters:
      - description: ID of the premises that the bed is in
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the bed to return
        explode: false
        in: path
        name: bedId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BedDetail"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets a given bed for a given premises
      tags:
      - Rooms
  /premises/{premisesId}/rooms:
    get:
      parameters:
      - description: ID of the premises to list the rooms for
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Room"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all rooms for the given premises
      tags:
      - Rooms
    post:
      parameters:
      - description: ID of the premises the room is in
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewRoom"
        description: details of the new room
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Adds a new room for an approved premises
      tags:
      - Rooms
  /premises/{premisesId}/rooms/{roomId}:
    get:
      parameters:
      - description: ID of the premises the room is in
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the room to get
        explode: false
        in: path
        name: roomId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or room ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a specific room for a premises
    put:
      parameters:
      - description: ID of the premises the room is in
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the room to update
        explode: false
        in: path
        name: roomId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRoom"
        description: Information to update the room with
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or room ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Updates a room
  /people/search:
    get:
      parameters:
      - description: CRN to search for
        explode: true
        in: query
        name: crn
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Searches for a Person by their CRN
  /people/{crn}/risks:
    get:
      parameters:
      - description: CRN of the Person to fetch risks for
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonRisks"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the risks for a Person
  /people/{crn}/prison-case-notes:
    get:
      parameters:
      - description: CRN of the Person to fetch prison case notes for
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      - description: CAS1 requests may limit returned case note types
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PrisonCaseNote"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the prison case notes for a Person
  /people/{crn}/adjudications:
    get:
      parameters:
      - description: CRN of the Person to fetch adjudications for
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      - description: CAS1 requests may be limited to adjudications for last 12 months
          only
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Adjudication"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the adjudications for a Person
  /people/{crn}/acct-alerts:
    get:
      parameters:
      - description: CRN of the Person to fetch ACCT alerts for
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PersonAcctAlert"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the ACCT alerts for a Person
  /people/{crn}/oasys/selection:
    get:
      parameters:
      - description: CRN of the Person to fetch latest OASys selection
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/OASysSection"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the importable sections of OASys including details of links
        to harm and reoffending
      tags:
      - OASys
  /people/{crn}/oasys/sections:
    get:
      parameters:
      - description: CRN of the Person to fetch latest OASys selection
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      - description: Section numbers for optional (not Linked to Harm) suppprting
          information
        explode: true
        in: query
        name: selected-sections
        required: false
        schema:
          items:
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OASysSections"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns OASys sections to support an Application.  The Supporting Information
        sections are returned if linked to harm and optionally if their section number
        appears in the selected-sections query parameter.
      tags:
      - OASys
  /people/{crn}/oasys/risk-to-self:
    get:
      parameters:
      - description: CRN of the Person to fetch latest OASys
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OASysRiskToSelf"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the Risk To Individual (known as Risk to Self on frontend)
        section of an OASys.
      tags:
      - OASys
  /people/{crn}/oasys/rosh:
    get:
      parameters:
      - description: CRN of the Person to fetch latest OASys
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OASysRiskOfSeriousHarm"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the Risk of Serious Harm section of an OASys.
      tags:
      - OASys
  /people/{crn}/offences:
    get:
      parameters:
      - description: CRN of the Person to fetch active offences for
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ActiveOffence"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns all active offences for a Person.
  /people/{crn}/timeline:
    get:
      parameters:
      - description: CRN of the Person to fetch the timeline for
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalTimeline"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a timeline of all applications for a Person.
  /premises/{premisesId}/lost-beds:
    get:
      parameters:
      - description: ID of the premises to show lost beds for
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LostBed"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all Lost Beds entries for the Premises
      tags:
      - Operations on premises
    post:
      parameters:
      - description: ID of the premises the lost bed is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewLostBed"
        description: details of the lost bed
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LostBed"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts a lost bed to a specified approved premises
      tags:
      - Operations on premises
      x-codegen-request-body-name: body
  /premises/{premisesId}/lost-beds/{lostBedId}:
    get:
      parameters:
      - description: ID of the premises the lost bed is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the lost bed
        explode: false
        in: path
        name: lostBedId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LostBed"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises or lost bed ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a specific lost bed for a premises
      tags:
      - Operations on premises
    put:
      parameters:
      - description: ID of the premises the lost bed is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the lost bed
        explode: false
        in: path
        name: lostBedId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLostBed"
        description: details of the lost bed
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LostBed"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or booking ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Updates a lost bed for a premises
      tags:
      - Operations on premises
      x-codegen-request-body-name: body
  /premises/{premisesId}/lost-beds/{lostBedId}/cancellations:
    post:
      parameters:
      - description: ID of the premises the cancellation is related to
        explode: false
        in: path
        name: premisesId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the lost bed
        explode: false
        in: path
        name: lostBedId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewLostBedCancellation"
        description: details of the cancellation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LostBedCancellation"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid premises ID or lost bed ID
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Posts a cancellation to a specified lost bed
      tags:
      - Operations on bookings
      x-codegen-request-body-name: body
  /applications/all:
    get:
      parameters:
      - description: Only approved premises anything else gets a 400
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "Page number of results to return. If blank, returns all results"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: CRN of applications
        explode: true
        in: query
        name: crnOrName
        required: false
        schema:
          type: string
        style: form
      - description: "The direction to sort the results by. If blank, will sort in\
          \ descending order"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          $ref: "#/components/schemas/SortDirection"
        style: form
      - description: "Application statuses to filter on. If none provided, all will\
          \ be returned"
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: "#/components/schemas/ApprovedPremisesApplicationStatus"
          type: array
        style: form
      - description: The field to sort the results by.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          $ref: "#/components/schemas/ApplicationSortField"
        style: form
      - description: Approved Premises Area ID to filter results by
        explode: true
        in: query
        name: apAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "If provided, restricts the results to only those with the given\
          \ release type."
        explode: true
        in: query
        name: releaseType
        required: false
        schema:
          $ref: "#/components/schemas/ReleaseTypeOption"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApplicationSummary"
                type: array
          description: successful operation
          headers:
            X-Pagination-CurrentPage:
              $ref: "#/components/headers/X-Pagination-CurrentPage"
            X-Pagination-TotalPages:
              $ref: "#/components/headers/X-Pagination-TotalPages"
            X-Pagination-TotalResults:
              $ref: "#/components/headers/X-Pagination-TotalResults"
            X-Pagination-PageSize:
              $ref: "#/components/headers/X-Pagination-TotalResults"
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all applications that any user has created
      tags:
      - Operations on all applications
  /applications:
    get:
      parameters:
      - description: "Which service to get applications for, defaults to approved-premises"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApplicationSummary"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all applications that the user has created
      tags:
      - Operations on all applications
    post:
      parameters:
      - description: "Which service the application will belong to, defaults to approved-premises"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: Instructs the API to create and return risk information from
          the OASys API (defaults to true)
        explode: true
        in: query
        name: createWithRisks
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewApplication"
        description: Information to create a blank application with
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Creates an application
      tags:
      - Operations on applications
      x-codegen-request-body-name: body
  /applications/{applicationId}:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets a single application by its ID
      tags:
      - Operations on applications
    put:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateApplication"
        description: Information to update the application with
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Updates an application
      tags:
      - Operations on applications
      x-codegen-request-body-name: body
  /applications/{applicationId}/withdrawal:
    post:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewWithdrawal"
        description: details of the withdrawal
        required: true
      responses:
        "200":
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid applicationId
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Withdraws an application with a reason
      tags:
      - Operations on applications
      x-codegen-request-body-name: body
  /applications/{applicationId}/notes:
    post:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewApplicationTimelineNote"
        description: the note to add
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationTimelineNote"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid applicationId
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Add a note on applications
      tags:
      - Add a note on applications
      x-codegen-request-body-name: body
  /applications/{applicationId}/timeline:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "If given, only users for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TimelineEvent"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns domain event summary
      tags:
      - Application data timeline
  /applications/{applicationId}/documents:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Document"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns meta info on documents at the person level or at the Conviction
        level for the index Offence of this application.
      tags:
      - Application data
  /applications/{applicationId}/appeals:
    post:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewAppeal"
        description: the appeal to add
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appeal"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid applicationId
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Add an appeal to an application
      tags:
      - Application data
      x-codegen-request-body-name: body
  /applications/{applicationId}/appeals/{appealId}:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the appeal
        explode: false
        in: path
        name: appealId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appeal"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid applicationId or appealId
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Get an appeal on an application
      tags:
      - Application data
  /documents/{crn}/{documentId}:
    get:
      parameters:
      - description: CRN of the Person the document is associated with
        explode: false
        in: path
        name: crn
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the document
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid applicationId or documentId
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Downloads a document
      tags:
      - Application data
  /applications/{applicationId}/submission:
    post:
      parameters:
      - description: Id of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitApplication"
        description: Information needed to submit an application
        required: true
      responses:
        "200":
          description: successfully submitted the application
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: application has already been submitted
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Submits an Application
      tags:
      - Application data
  /applications/{applicationId}/assessment:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assessment"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Get the assessment for an application
      tags:
      - Operations on applications
  /applications/{applicationId}/withdrawables:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "If given, only users for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Withdrawable"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Returns a list of withdrawable items associated with this application,\
        \ including the application itself, if withdrawable"
      tags:
      - Operations on applications
  /applications/{applicationId}/withdrawablesWithNotes:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "If given, only users for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Withdrawables"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Returns a list of withdrawable items associated with this application,\
        \ including the application itself, if withdrawable"
      tags:
      - Operations on applications
  /applications/{applicationId}/requests-for-placement:
    get:
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RequestForPlacement"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a list of Requests for Placement for the given application.
  /applications/{applicationId}/requests-for-placement/{requestForPlacementId}:
    get:
      parameters:
      - description: ID of the application which the Request for Placement enacts.
        explode: false
        in: path
        name: applicationId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of the Request for Placement.
        explode: false
        in: path
        name: requestForPlacementId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestForPlacement"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid CRN
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns the specified Request for Placement.
  /beds/search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BedSearchParameters"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BedSearchResults"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Searches for available Beds within the given parameters
  /bookings/{bookingId}:
    get:
      parameters:
      - description: ID of the booking
        explode: false
        in: path
        name: bookingId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
          description: successfully retrieved booking
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets a booking
  /bookings/search:
    get:
      parameters:
      - description: "If provided, only search for bookings with the given status"
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: "#/components/schemas/BookingStatus"
        style: form
      - description: "If provided, return results in the given order"
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          $ref: "#/components/schemas/SortOrder"
        style: form
      - description: "If provided, return results ordered by the given field name"
        explode: true
        in: query
        name: sortField
        required: false
        schema:
          $ref: "#/components/schemas/BookingSearchSortField"
        style: form
      - description: "Page number of results to return. If blank, returns all results"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Filters bookings using exact or partial match on name or exact
          CRN match
        explode: true
        in: query
        name: crnOrName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingSearchResults"
          description: successful operation
          headers:
            X-Pagination-CurrentPage:
              $ref: "#/components/headers/X-Pagination-CurrentPage"
            X-Pagination-TotalPages:
              $ref: "#/components/headers/X-Pagination-TotalPages"
            X-Pagination-TotalResults:
              $ref: "#/components/headers/X-Pagination-TotalResults"
            X-Pagination-PageSize:
              $ref: "#/components/headers/X-Pagination-TotalResults"
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Searches for bookings with the given parameters
  /reference-data/departure-reasons:
    get:
      parameters:
      - description: "If given, only departure reasons for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: Specifies whether inactive departure reasons should be provided.
          Defaults to `false`.
        explode: true
        in: query
        name: includeInactive
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DepartureReason"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all departure reasons
      tags:
      - Reference Data
  /reference-data/move-on-categories:
    get:
      parameters:
      - description: "If given, only move-on categories for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: Specifies whether inactive move-on categories should be provided.
          Defaults to `false`.
        explode: true
        in: query
        name: includeInactive
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MoveOnCategory"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all move-on categories for departures
      tags:
      - Reference Data
  /reference-data/destination-providers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DestinationProvider"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all destination providers for departures
      tags:
      - Reference Data
  /reference-data/supervising-providers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupervisingProvider"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all supervising providers for arrivals
      tags:
      - Reference Data
  /reference-data/supervising-teams:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupervisingTeam"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all supervising teams for arrivals
      tags:
      - Reference Data
  /reference-data/non-arrival-reasons:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NonArrivalReason"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists reasons for non-arrivals
      tags:
      - Reference Data
  /reference-data/supervising-officers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SupervisingOfficer"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all supervising officers for arrivals
      tags:
      - Reference Data
  /reference-data/lost-bed-reasons:
    get:
      parameters:
      - description: "If given, only lost bed reasons for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LostBedReason"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all reasons for losing beds
      tags:
      - Reference Data
  /reference-data/cancellation-reasons:
    get:
      parameters:
      - description: "If given, only departure reasons for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CancellationReason"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all cancellation reasons
      tags:
      - Reference Data
  /reference-data/local-authority-areas:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LocalAuthorityArea"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all local authorities
      tags:
      - Local Authorities
  /reference-data/probation-regions:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProbationRegion"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all probation regions
      tags:
      - Reference Data
  /reference-data/ap-areas:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ApArea"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all probation regions
      tags:
      - Reference Data
  /reference-data/characteristics:
    get:
      parameters:
      - description: "If given, only characteristics for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: Specifies whether inactive characteristics should be provided.
          Defaults to `false`.
        explode: true
        in: query
        name: includeInactive
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Characteristic"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all available characteristics
      tags:
      - Characteristics
  /reference-data/probation-delivery-units:
    get:
      parameters:
      - description: "If given, only probation delivery units for this region will\
          \ be returned"
        explode: true
        in: query
        name: probationRegionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProbationDeliveryUnit"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Lists probation delivery units, optionally filtered by region"
      tags:
      - Reference Data
  /reference-data/referral-rejection-reasons:
    get:
      parameters:
      - description: "If given, only referral rejection reasons for this service will\
          \ be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ReferralRejectionReason"
                type: array
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Lists all referral rejection reasons
      tags:
      - Reference Data
  /tasks:
    get:
      parameters:
      - deprecated: true
        description: Returns tasks that match the given type. BookingAppeal is not
          supported. Deprecated - use 'types'
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: "#/components/schemas/TaskType"
        style: form
      - description: Returns tasks that match the given types. BookingAppeal is not
          supported
        explode: true
        in: query
        name: types
        required: false
        schema:
          items:
            $ref: "#/components/schemas/TaskType"
          type: array
        style: form
      - description: Page number of results to return. If not provided results will
          not be paged
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of items to return per page (defaults to 10)
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          type: integer
        style: form
      - description: Which field to sort the results by. If not provided will sort
          by createdAt
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          $ref: "#/components/schemas/TaskSortField"
        style: form
      - description: The direction to sort the results by. If not provided will sort
          by descending order
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          $ref: "#/components/schemas/SortDirection"
        style: form
      - description: "Allows filtering on allocated, unallocated, or both"
        explode: true
        in: query
        name: allocatedFilter
        required: false
        schema:
          $ref: "#/components/schemas/AllocatedFilter"
        style: form
      - deprecated: true
        description: "Approved Premises Area ID to filter results by.  Deprecated,\
          \ Use cruManagementAreaId instead."
        explode: true
        in: query
        name: apAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: filter by CRU management area ID
        explode: true
        in: query
        name: cruManagementAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Only show tasks allocated to this user id
        explode: true
        in: query
        name: allocatedToUserId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Only show tasks with this required qualification
        explode: true
        in: query
        name: requiredQualification
        required: false
        schema:
          $ref: "#/components/schemas/UserQualification"
        style: form
      - description: search by CRN or name
        explode: true
        in: query
        name: crnOrName
        required: false
        schema:
          type: string
        style: form
      - description: filter by if the tasks are completed (defaults to `false`)
        explode: true
        in: query
        name: isCompleted
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Task"
                type: array
          description: successfully retrieved tasks
          headers:
            X-Pagination-CurrentPage:
              $ref: "#/components/headers/X-Pagination-CurrentPage"
            X-Pagination-TotalPages:
              $ref: "#/components/headers/X-Pagination-TotalPages"
            X-Pagination-TotalResults:
              $ref: "#/components/headers/X-Pagination-TotalResults"
            X-Pagination-PageSize:
              $ref: "#/components/headers/X-Pagination-TotalResults"
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: List all tasks
      tags:
      - Task data
  /tasks/{taskType}/{id}:
    get:
      parameters:
      - description: ID of the task
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Task type
        explode: false
        in: path
        name: taskType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskWrapper"
          description: successfully retrieved task
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets a task for an application
      tags:
      - Application data
  /tasks/{taskType}/{id}/allocations:
    delete:
      parameters:
      - description: ID of the task
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Task type
        explode: false
        in: path
        name: taskType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Unallocates a task for an application
      tags:
      - Operations on applications
    post:
      parameters:
      - description: ID of the task
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Task type
        explode: false
        in: path
        name: taskType
        required: true
        schema:
          type: string
        style: simple
      - description: Only assessments for this service will be returned
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewReallocation"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reallocation"
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Reallocates a task for an application
      tags:
      - Operations on applications
      x-codegen-request-body-name: body
  /placement-requests:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlacementRequest"
                type: array
          description: successfully retrieved placement requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets placement requests for a given user
      tags:
      - Placement requests
  /placement-requests/dashboard:
    get:
      parameters:
      - description: filter by status of an application
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: "#/components/schemas/PlacementRequestStatus"
        style: form
      - description: filter by CRN
        explode: true
        in: query
        name: crn
        required: false
        schema:
          type: string
        style: form
      - description: search by CRN or name
        explode: true
        in: query
        name: crnOrName
        required: false
        schema:
          type: string
        style: form
      - description: filter by tier of Offender at time Application was created
        explode: true
        in: query
        name: tier
        required: false
        schema:
          $ref: "#/components/schemas/RiskTierLevel"
        style: form
      - description: filter by minimum expected arrival date
        explode: true
        in: query
        name: arrivalDateStart
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: filter by maximum expected arrival date
        explode: true
        in: query
        name: arrivalDateEnd
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: filter by request type
        explode: true
        in: query
        name: requestType
        required: false
        schema:
          $ref: "#/components/schemas/PlacementRequestRequestType"
        style: form
      - deprecated: true
        description: filter by approved premises area ID.  Use cruManagementAreaId
          instead.
        explode: true
        in: query
        name: apAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: filter by CRU management area ID
        explode: true
        in: query
        name: cruManagementAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "Page number of results to return. If blank, returns all results"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: "Which field to sort the results by. If blank, will sort by createdAt"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          $ref: "#/components/schemas/PlacementRequestSortField"
        style: form
      - description: "The direction to sort the results by. If blank, will sort in\
          \ descending order"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          $ref: "#/components/schemas/SortDirection"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlacementRequest"
                type: array
          description: successfully retrieved placement requests
          headers:
            X-Pagination-CurrentPage:
              $ref: "#/components/headers/X-Pagination-CurrentPage"
            X-Pagination-TotalPages:
              $ref: "#/components/headers/X-Pagination-TotalPages"
            X-Pagination-TotalResults:
              $ref: "#/components/headers/X-Pagination-TotalResults"
            X-Pagination-PageSize:
              $ref: "#/components/headers/X-Pagination-TotalResults"
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets all placement requests
      tags:
      - Placement requests
  /placement-requests/{id}:
    get:
      parameters:
      - description: ID of the placement request
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlacementRequestDetail"
          description: successfully retrieved placement requests
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets placement requests for a given user
      tags:
      - Placement requests
  /placement-requests/{id}/withdrawal:
    post:
      parameters:
      - description: ID of the placement request
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WithdrawPlacementRequest"
        description: Withdrawal details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlacementRequestDetail"
          description: successful operation
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: invalid applicationId
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Withdraws a placement request
      tags:
      - Placement requests
      x-codegen-request-body-name: body
  /placement-requests/{id}/booking:
    post:
      parameters:
      - description: ID of the placement request
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPlacementRequestBooking"
        description: Booking details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NewPlacementRequestBookingConfirmation"
          description: successfully created a Booking
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Creates a Booking for a placement request
      tags:
      - Placement requests
  /placement-requests/{id}/booking-not-made:
    post:
      parameters:
      - description: ID of the placement request
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewBookingNotMade"
        description: Details about the failure to match
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingNotMade"
          description: successfully recorded that a Booking could not be made
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Records that an attempt to match was made but no suitable Beds could
        be found
      tags:
      - Placement requests
  /placement-applications:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPlacementApplication"
        description: Details about the application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlacementApplication"
          description: successfully recorded that a placement application has been
            made
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Creates an application for a placement
      tags:
      - Placement applications
  /placement-applications/{id}:
    get:
      parameters:
      - description: Id of the application
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlacementApplication"
          description: successfully retrieved placement request application
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Retrieves an application for a placement request
      tags:
      - Placement applications
    put:
      parameters:
      - description: Id of the application
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlacementApplication"
        description: Details about the application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlacementApplication"
          description: successfully retrieved placement request application
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Updates an application for a placement request
      tags:
      - Placement applications
  /placement-applications/{id}/submission:
    post:
      parameters:
      - description: Id of the application
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitPlacementApplication"
        description: Information needed to submit a placement application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlacementApplication"
                type: array
          description: successfully submitted the placement application
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: placement application has already been submitted
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Submits an application for a placement request
      tags:
      - Placement applications
  /placement-applications/{id}/decision:
    post:
      parameters:
      - description: Id of the application
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlacementApplicationDecisionEnvelope"
        description: Information needed to submit a placement application
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlacementApplication"
          description: successfully made a decision on the placement application
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: placement application already has a decision made
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Submits a decision for a placement application
      tags:
      - Placement applications
  /placement-applications/{id}/withdraw:
    post:
      parameters:
      - description: Id of the placement application to withdraw
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WithdrawPlacementApplication"
        description: Withdrawal details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlacementApplication"
          description: Placement application withdrawn
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: placement application already has a decision made
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Withdraw a placement application
      tags:
      - Placement applications
  /assessments:
    get:
      parameters:
      - description: Only assessments for this service will be returned
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "If provided, return results in the given order"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          $ref: "#/components/schemas/SortDirection"
        style: form
      - description: "If provided, return results ordered by the given field name"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          $ref: "#/components/schemas/AssessmentSortField"
        style: form
      - description: "If provided, return only results with the given statuses"
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          items:
            $ref: "#/components/schemas/AssessmentStatus"
          type: array
        style: form
      - description: "Filters results using an exact match or CRN, or partial match\
          \ on name"
        explode: true
        in: query
        name: crnOrName
        required: false
        schema:
          type: string
        style: form
      - description: "Page number of results to return. If blank, returns all results"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of items to return per page (defaults to 10)
        explode: true
        in: query
        name: perPage
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AssessmentSummary"
                type: array
          description: successfully retrieved assessments
          headers:
            X-Pagination-CurrentPage:
              description: The current page number
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-TotalPages:
              description: The total number of pages
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-TotalResults:
              description: The total number of results
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-PageSize:
              description: The size of each page
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets assessments the user is authorised to view
      tags:
      - Assessment data
  /assessments/{assessmentId}:
    get:
      parameters:
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assessment"
          description: successfully retrieved assessment
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Gets a single assessment by its id
      tags:
      - Assessment data
    put:
      parameters:
      - description: Required for operations specific to each CAS
        explode: false
        in: header
        name: X-Service-Name
        required: false
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAssessment"
        description: Updated assessment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assessment"
          description: successfully retrieved assessment
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Updates an assessment
      tags:
      - Assessment data
  /assessments/{assessmentId}/notes:
    post:
      parameters:
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewClarificationNote"
        description: Clarification note
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClarificationNote"
          description: successfully created a clarification note
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Adds a clarification note to an assessment
      tags:
      - Assessment data
  /assessments/{assessmentId}/notes/{noteId}:
    put:
      parameters:
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Id of the clarification note
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatedClarificationNote"
        description: Clarification note
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClarificationNote"
          description: successfully updated a clarification note
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Updates an assessment's clarification note
      tags:
      - Assessment data
  /assessments/{assessmentId}/referral-history-notes:
    post:
      parameters:
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewReferralHistoryUserNote"
        description: User note
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferralHistoryNote"
          description: successfully created a user-written note
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Adds a user-written note to an assessment
      tags:
      - Assessment data
  /assessments/{assessmentId}/acceptance:
    post:
      parameters:
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssessmentAcceptance"
        description: Information needed to accept an assessment
        required: true
      responses:
        "200":
          description: successfully accepted the assessment
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Accepts an Assessment
      tags:
      - Assessment data
  /assessments/{assessmentId}/rejection:
    post:
      parameters:
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssessmentRejection"
        description: Rejection info
        required: true
      responses:
        "200":
          description: successfully rejected the assessment
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Rejects an Assessment
      tags:
      - Assessment data
  /assessments/{assessmentId}/closure:
    post:
      parameters:
      - description: Id of the assessment
        explode: false
        in: path
        name: assessmentId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: successfully closed the assessment
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Closes an Assessment
      tags:
      - Assessment data
  /profile/v2:
    get:
      parameters:
      - description: Filters the user details to those relevant to the specified service.
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "If set to true, will not attempt to update the user from delius"
        explode: true
        in: query
        name: readOnly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
          description: successfully retrieved information on user
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns information on the logged in user
      tags:
      - Auth
  /users:
    get:
      parameters:
      - description: Only return users with the provided role(s)
        explode: true
        in: query
        name: roles
        required: false
        schema:
          items:
            $ref: "#/components/schemas/ApprovedPremisesUserRole"
          type: array
        style: form
      - description: Only return users with the provided qualification(s)
        explode: true
        in: query
        name: qualifications
        required: false
        schema:
          items:
            $ref: "#/components/schemas/UserQualification"
          type: array
        style: form
      - description: Probation region ID to filter results by
        explode: true
        in: query
        name: probationRegionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - deprecated: true
        description: "Approved premises area ID to filter results by.  Deprecated,\
          \ Use cruManagementAreaId instead."
        explode: true
        in: query
        name: apAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: filter by CRU management area ID
        explode: true
        in: query
        name: cruManagementAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Filters the user details to those relevant to the specified service.
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "Page number of results to return. If blank, returns all results"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: "Which field to sort the results by. If blank, will sort by createdAt"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          $ref: "#/components/schemas/UserSortField"
        style: form
      - description: "The direction to sort the results by. If blank, will sort in\
          \ descending order"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          $ref: "#/components/schemas/SortDirection"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/User"
                type: array
          description: successfully retrieved users
          headers:
            X-Pagination-CurrentPage:
              description: The current page number
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-TotalPages:
              description: The total number of pages
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-TotalResults:
              description: The total number of results
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-PageSize:
              description: The size of each page
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Returns a list of users. If only the user's ID and Name are required,\
        \ use /users/summary"
      tags:
      - Auth
  /users/{id}:
    delete:
      deprecated: true
      parameters:
      - description: ID of the user
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Only users for this service will be allowed to delete a user
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          description: successful operation
        "400":
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ValidationError"
          description: invalid params
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Deletes the user. Deprecated. Instead use DELETE /cas1/user/{userid}"
    get:
      parameters:
      - description: Id of the user
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "If given, only users for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: successfully retrieved information on user
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Get information about a specific user
    put:
      deprecated: true
      parameters:
      - description: "If given, only users for this service will be returned"
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: Id of the user
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRolesAndQualifications"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successfully added information about user roles and qualifications
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Update information about a specific user's roles and qualifications.\
        \ Deprecated. Instead use PUT /cas1/user/{userid}"
  /users/summary:
    get:
      parameters:
      - description: Only return users with the provided role(s)
        explode: true
        in: query
        name: roles
        required: false
        schema:
          items:
            $ref: "#/components/schemas/ApprovedPremisesUserRole"
          type: array
        style: form
      - description: Only return users with the provided qualification(s)
        explode: true
        in: query
        name: qualifications
        required: false
        schema:
          items:
            $ref: "#/components/schemas/UserQualification"
          type: array
        style: form
      - description: Probation region ID to filter results by
        explode: true
        in: query
        name: probationRegionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Approved premises area ID to filter results by
        explode: true
        in: query
        name: apAreaId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Filters the user details to those relevant to the specified service.
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "Page number of results to return. If blank, returns all results"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: "Which field to sort the results by. If blank, will sort by createdAt"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          $ref: "#/components/schemas/UserSortField"
        style: form
      - description: "The direction to sort the results by. If blank, will sort in\
          \ descending order"
        explode: true
        in: query
        name: sortDirection
        required: false
        schema:
          $ref: "#/components/schemas/SortDirection"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserSummary"
                type: array
          description: successfully retrieved users
          headers:
            X-Pagination-CurrentPage:
              description: The current page number
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-TotalPages:
              description: The total number of pages
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-TotalResults:
              description: The total number of results
              explode: false
              schema:
                type: integer
              style: simple
            X-Pagination-PageSize:
              description: The size of each page
              explode: false
              schema:
                type: integer
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a list of user summaries (i.e. id and name only)
      tags:
      - Auth
  /users/search:
    get:
      parameters:
      - description: Name or partial name of the user
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: Filters the user details to those relevant to the specified service.
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/User"
                type: array
          description: successfully retrieved users
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a list of users with partial match on name
      tags:
      - Auth
  /users/delius:
    get:
      parameters:
      - description: Name of the user
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: Filters the user details to those relevant to the specified service.
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: successfully retrieved user
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: User not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: Returns a user with match on name
      tags:
      - Auth
  /seed:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SeedRequest"
        required: true
      responses:
        "202":
          description: successfully requested task
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Starts the data seeding process, can only be called from a local connection"
  /cache/{cacheName}:
    delete:
      parameters:
      - explode: false
        in: path
        name: cacheName
        required: true
        schema:
          $ref: "#/components/schemas/CacheType"
        style: simple
      responses:
        "200":
          description: successfully cleared cache
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Clears the given cache, can only be called from a local connection"
  /migration-job:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MigrationJobRequest"
        required: true
      responses:
        "202":
          description: successfully requested task
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: not authenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unauthorised
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
          description: unexpected error
      summary: "Starts a migration job (process for data migrations that can't be\
        \ achieved solely via SQL migrations), can only be called from a local connection"
  /reports/bookings:
    get:
      parameters:
      - description: Only bookings for this service will be returned
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "If provided, only bookings for this region will be returned"
        explode: true
        in: query
        name: probationRegionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "If provided, only bookings for this year will be returned"
        explode: true
        in: query
        name: year
        required: true
        schema:
          type: integer
        style: form
      - description: "If provided, only bookings for this month will be returned -\
          \ must be provided with year"
        explode: true
        in: query
        name: month
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: binary
                type: string
          description: Successfully retrieved the report
      summary: Returns a spreadsheet of all bookings for the specified service and
        (optional) region.
      tags:
      - Reports
  /reports/bed-usage:
    get:
      parameters:
      - description: Only bookings for this service will be returned
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "If provided, only bookings for this region will be returned"
        explode: true
        in: query
        name: probationRegionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Only bookings for this year will be returned
        explode: true
        in: query
        name: year
        required: true
        schema:
          type: integer
        style: form
      - description: Only bookings for this month will be returned - must be provided
          with year
        explode: true
        in: query
        name: month
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: binary
                type: string
          description: Successfully retrieved the report
      summary: "Returns a spreadsheet of the bookings, voids and turnarounds all beds\
        \ for the specified service and (optional) region."
      tags:
      - Reports
  /reports/bed-utilisation:
    get:
      parameters:
      - description: Only bookings for this service will be returned
        explode: false
        in: header
        name: X-Service-Name
        required: true
        schema:
          $ref: "#/components/schemas/ServiceName"
        style: simple
      - description: "If provided, only bookings for this region will be returned"
        explode: true
        in: query
        name: probationRegionId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Only bookings for this year will be returned
        explode: true
        in: query
        name: year
        required: true
        schema:
          type: integer
        style: form
      - description: Only bookings for this month will be returned - must be provided
          with year
        explode: true
        in: query
        name: month
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                format: binary
                type: string
          description: Successfully retrieved the report
      summary: Returns a spreadsheet showing how many days per month each bedspace
        spent in which state and the overall occupancy rate.
      tags:
      - Reports
components:
  headers:
    X-Pagination-CurrentPage:
      description: The current page number
      explode: false
      schema:
        type: integer
      style: simple
    X-Pagination-TotalPages:
      description: The total number of pages
      explode: false
      schema:
        type: integer
      style: simple
    X-Pagination-TotalResults:
      description: The total number of results
      explode: false
      schema:
        type: integer
      style: simple
    X-Pagination-PageSize:
      description: The size of each page
      explode: false
      schema:
        type: integer
      style: simple
  responses:
    "401Response":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: not authenticated
    "403Response":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: unauthorised
    "500Response":
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: unexpected error
  schemas:
    Premises:
      discriminator:
        mapping:
          CAS1: "#/components/schemas/ApprovedPremises"
          CAS3: "#/components/schemas/TemporaryAccommodationPremises"
        propertyName: service
      example:
        characteristics:
        - propertyName: isCatered
          name: Is this premises catered (rather than self-catered)?
          serviceScope: approved-premises
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          modelScope: premises
        - propertyName: isCatered
          name: Is this premises catered (rather than self-catered)?
          serviceScope: approved-premises
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          modelScope: premises
        notes: some notes about this property
        town: Braintree
        probationRegion:
          name: NPS North East Central Referrals
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
        postcode: LS1 3AD
        availableBedsForToday: 20
        apArea:
          identifier: LON
          name: Yorkshire & The Humber
          id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
        localAuthorityArea:
          identifier: LEEDS
          name: Leeds City Council
          id: 6abb5fa3-e93f-4445-887b-30d081688f44
        service: service
        name: Hope House
        addressLine1: one something street
        addressLine2: Blackmore End
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bedCount: 22
        status: pending
      properties:
        service:
          type: string
        id:
          format: uuid
          type: string
        name:
          example: Hope House
          type: string
        addressLine1:
          example: one something street
          type: string
        addressLine2:
          example: Blackmore End
          type: string
        town:
          example: Braintree
          type: string
        postcode:
          example: LS1 3AD
          type: string
        bedCount:
          example: 22
          type: integer
        availableBedsForToday:
          example: 20
          type: integer
        notes:
          example: some notes about this property
          type: string
        probationRegion:
          $ref: "#/components/schemas/ProbationRegion"
        apArea:
          $ref: "#/components/schemas/ApArea"
        localAuthorityArea:
          $ref: "#/components/schemas/LocalAuthorityArea"
        characteristics:
          items:
            $ref: "#/components/schemas/Characteristic"
          type: array
        status:
          $ref: "#/components/schemas/PropertyStatus"
      required:
      - addressLine1
      - apArea
      - availableBedsForToday
      - bedCount
      - id
      - name
      - postcode
      - probationRegion
      - service
      - status
      type: object
    PremisesSummary:
      discriminator:
        mapping:
          CAS1: "#/components/schemas/ApprovedPremisesSummary"
          CAS3: "#/components/schemas/TemporaryAccommodationPremisesSummary"
        propertyName: service
      example:
        service: service
        name: Hope House
        postcode: LS1 3AD
        addressLine1: one something street
        addressLine2: Blackmore End
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bedCount: 22
        status: pending
      properties:
        service:
          type: string
        id:
          format: uuid
          type: string
        name:
          example: Hope House
          type: string
        addressLine1:
          example: one something street
          type: string
        addressLine2:
          example: Blackmore End
          type: string
        postcode:
          example: LS1 3AD
          type: string
        bedCount:
          example: 22
          type: integer
        status:
          $ref: "#/components/schemas/PropertyStatus"
      required:
      - addressLine1
      - bedCount
      - id
      - name
      - postcode
      - service
      - status
      type: object
    ApprovedPremises:
      allOf:
      - $ref: "#/components/schemas/Premises"
      - properties:
          apCode:
            example: NEHOPE1
            type: string
        type: object
      required:
      - apCode
      - localAuthorityArea
    TemporaryAccommodationPremises:
      allOf:
      - $ref: "#/components/schemas/Premises"
      - properties:
          pdu:
            type: string
          probationDeliveryUnit:
            $ref: "#/components/schemas/ProbationDeliveryUnit"
          turnaroundWorkingDayCount:
            example: 2
            type: integer
        type: object
      required:
      - pdu
    ApprovedPremisesSummary:
      allOf:
      - $ref: "#/components/schemas/PremisesSummary"
      - properties:
          apCode:
            example: NEHOPE1
            type: string
          probationRegion:
            type: string
          apArea:
            type: string
        type: object
      required:
      - apArea
      - apCode
      - probationRegion
    TemporaryAccommodationPremisesSummary:
      allOf:
      - $ref: "#/components/schemas/PremisesSummary"
      - properties:
          pdu:
            type: string
          localAuthorityAreaName:
            type: string
        type: object
      required:
      - pdu
    NewPremises:
      example:
        pdu: pdu
        notes: some notes about this property
        town: town
        postcode: postcode
        probationDeliveryUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        characteristicIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        turnaroundWorkingDayCount: 0
        name: name
        addressLine1: addressLine1
        probationRegionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        addressLine2: addressLine2
        localAuthorityAreaId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: pending
      properties:
        name:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
        notes:
          example: some notes about this property
          type: string
        localAuthorityAreaId:
          format: uuid
          type: string
        probationRegionId:
          format: uuid
          type: string
        characteristicIds:
          items:
            format: uuid
            type: string
          type: array
        status:
          $ref: "#/components/schemas/PropertyStatus"
        pdu:
          type: string
        probationDeliveryUnitId:
          format: uuid
          type: string
        turnaroundWorkingDayCount:
          type: integer
      required:
      - addressLine1
      - characteristicIds
      - name
      - postcode
      - probationRegionId
      - status
      type: object
    TaskWrapper:
      example:
        task:
          outcomeRecordedAt: 2000-01-23T04:56:07.000+00:00
          dueDate: 2000-01-23
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          personName: personName
          dueAt: 2000-01-23T04:56:07.000+00:00
          allocatedToStaffMember:
            telephoneNumber: telephoneNumber
            roles:
            - assessor
            - assessor
            probationDeliveryUnit:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            cruManagementArea: ""
            cruManagementAreaDefault: ""
            isActive: true
            version: 0
            cruManagementAreaOverride: ""
            qualifications:
            - pipe
            - pipe
            apArea:
              identifier: LON
              name: Yorkshire & The Humber
              id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
            service: service
            permissions:
            - cas1_adhoc_booking_create
            - cas1_adhoc_booking_create
            deliusUsername: deliusUsername
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region:
              name: NPS North East Central Referrals
              id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
            email: email
          taskType: Assessment
          apArea:
            identifier: LON
            name: Yorkshire & The Humber
            id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
          personSummary:
            personType: FullPersonSummary
            crn: crn
          id: 6abb5fa3-e93f-4445-887b-30d081688f44
          applicationId: 6abb5fa3-e93f-4445-887b-30d081688f44
          crn: crn
          status: not_started
        users:
        - telephoneNumber: telephoneNumber
          numTasksPending: 0
          roles:
          - assessor
          - assessor
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cruManagementArea: ""
          isActive: true
          qualifications:
          - pipe
          - pipe
          apArea: ""
          numTasksCompleted7Days: 6
          service: service
          deliusUsername: deliusUsername
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
          numTasksCompleted30Days: 1
        - telephoneNumber: telephoneNumber
          numTasksPending: 0
          roles:
          - assessor
          - assessor
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cruManagementArea: ""
          isActive: true
          qualifications:
          - pipe
          - pipe
          apArea: ""
          numTasksCompleted7Days: 6
          service: service
          deliusUsername: deliusUsername
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
          numTasksCompleted30Days: 1
      properties:
        task:
          $ref: "#/components/schemas/Task"
        users:
          description: Users to whom this task can be allocated
          items:
            $ref: "#/components/schemas/UserWithWorkload"
          type: array
      required:
      - task
      - users
      type: object
    Task:
      discriminator:
        mapping:
          Assessment: "#/components/schemas/AssessmentTask"
          PlacementRequest: "#/components/schemas/PlacementRequestTask"
          PlacementApplication: "#/components/schemas/PlacementApplicationTask"
          BookingAppeal: "#/components/schemas/BookingAppealTask"
        propertyName: taskType
      example:
        outcomeRecordedAt: 2000-01-23T04:56:07.000+00:00
        dueDate: 2000-01-23
        probationDeliveryUnit:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        personName: personName
        dueAt: 2000-01-23T04:56:07.000+00:00
        allocatedToStaffMember:
          telephoneNumber: telephoneNumber
          roles:
          - assessor
          - assessor
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cruManagementArea: ""
          cruManagementAreaDefault: ""
          isActive: true
          version: 0
          cruManagementAreaOverride: ""
          qualifications:
          - pipe
          - pipe
          apArea:
            identifier: LON
            name: Yorkshire & The Humber
            id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
          service: service
          permissions:
          - cas1_adhoc_booking_create
          - cas1_adhoc_booking_create
          deliusUsername: deliusUsername
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
        taskType: Assessment
        apArea:
          identifier: LON
          name: Yorkshire & The Humber
          id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
        personSummary:
          personType: FullPersonSummary
          crn: crn
        id: 6abb5fa3-e93f-4445-887b-30d081688f44
        applicationId: 6abb5fa3-e93f-4445-887b-30d081688f44
        crn: crn
        status: not_started
      properties:
        taskType:
          $ref: "#/components/schemas/TaskType"
        id:
          example: 6abb5fa3-e93f-4445-887b-30d081688f44
          format: uuid
          type: string
        applicationId:
          example: 6abb5fa3-e93f-4445-887b-30d081688f44
          format: uuid
          type: string
        personSummary:
          $ref: "#/components/schemas/PersonSummary"
        personName:
          deprecated: true
          description: Superseded by personSummary which provides 'name' as well as
            'personType' and 'crn'.
          type: string
        crn:
          type: string
        dueDate:
          deprecated: true
          description: The Due date of the task - this is deprecated in favour of
            the `dueAt` field
          format: date
          type: string
        dueAt:
          format: date-time
          type: string
        allocatedToStaffMember:
          $ref: "#/components/schemas/ApprovedPremisesUser"
        status:
          $ref: "#/components/schemas/TaskStatus"
        apArea:
          $ref: "#/components/schemas/ApArea"
        probationDeliveryUnit:
          $ref: "#/components/schemas/ProbationDeliveryUnit"
        outcomeRecordedAt:
          format: date-time
          type: string
      required:
      - applicationId
      - crn
      - dueAt
      - dueDate
      - id
      - personName
      - personSummary
      - status
      - taskType
      type: object
    TaskStatus:
      enum:
      - not_started
      - in_progress
      - complete
      - info_requested
      type: string
    TaskSortField:
      enum:
      - createdAt
      - dueAt
      - person
      - allocatedTo
      - completedAt
      - taskType
      - decision
      type: string
    AssessmentTask:
      allOf:
      - $ref: "#/components/schemas/Task"
      - properties:
          createdFromAppeal:
            type: boolean
          outcome:
            $ref: "#/components/schemas/AssessmentDecision"
        required:
        - createdFromAppeal
        type: object
    PlacementRequestTask:
      allOf:
      - $ref: "#/components/schemas/Task"
      - $ref: "#/components/schemas/PlacementDates"
      - properties:
          tier:
            $ref: "#/components/schemas/RiskTierEnvelope"
          releaseType:
            $ref: "#/components/schemas/ReleaseTypeOption"
          placementRequestStatus:
            $ref: "#/components/schemas/PlacementRequestStatus"
          outcome:
            $ref: "#/components/schemas/PlacementRequestTaskOutcome"
        required:
        - placementRequestStatus
        - releaseType
        - tier
        type: object
    PlacementApplicationTask:
      allOf:
      - $ref: "#/components/schemas/Task"
      - properties:
          tier:
            $ref: "#/components/schemas/RiskTierEnvelope"
          releaseType:
            $ref: "#/components/schemas/ReleaseTypeOption"
          placementType:
            $ref: "#/components/schemas/PlacementType"
          placementDates:
            items:
              $ref: "#/components/schemas/PlacementDates"
            type: array
          outcome:
            $ref: "#/components/schemas/PlacementApplicationDecision"
        required:
        - id
        - placementType
        - releaseType
        - tier
        type: object
    PlacementRequestTaskOutcome:
      enum:
      - matched
      - unable_to_match
      type: string
    BookingAppealTask:
      allOf:
      - $ref: "#/components/schemas/Task"
    TaskType:
      enum:
      - Assessment
      - PlacementRequest
      - PlacementApplication
      - BookingAppeal
      type: string
    LocalAuthorityArea:
      example:
        identifier: LEEDS
        name: Leeds City Council
        id: 6abb5fa3-e93f-4445-887b-30d081688f44
      properties:
        id:
          example: 6abb5fa3-e93f-4445-887b-30d081688f44
          format: uuid
          type: string
        identifier:
          example: LEEDS
          type: string
        name:
          example: Leeds City Council
          type: string
      required:
      - id
      - identifier
      - name
      type: object
    ApArea:
      example:
        identifier: LON
        name: Yorkshire & The Humber
        id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
      properties:
        id:
          example: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
          format: uuid
          type: string
        identifier:
          example: LON
          type: string
        name:
          example: Yorkshire & The Humber
          type: string
      required:
      - id
      - identifier
      - name
      type: object
    Cas1CruManagementArea:
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    ProbationRegion:
      example:
        name: NPS North East Central Referrals
        id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
      properties:
        id:
          example: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          format: uuid
          type: string
        name:
          example: NPS North East Central Referrals
          type: string
      required:
      - id
      - name
      type: object
    Characteristic:
      example:
        propertyName: isCatered
        name: Is this premises catered (rather than self-catered)?
        serviceScope: approved-premises
        id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
        modelScope: premises
      properties:
        id:
          example: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          format: uuid
          type: string
        name:
          example: Is this premises catered (rather than self-catered)?
          type: string
        propertyName:
          example: isCatered
          type: string
        serviceScope:
          enum:
          - approved-premises
          - temporary-accommodation
          - '*'
          type: string
        modelScope:
          enum:
          - premises
          - room
          - '*'
          type: string
      required:
      - id
      - modelScope
      - name
      - serviceScope
      type: object
    BookingBody:
      properties:
        id:
          format: uuid
          type: string
        person:
          $ref: "#/components/schemas/Person"
        arrivalDate:
          format: date
          type: string
        originalArrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        originalDepartureDate:
          format: date
          type: string
        createdAt:
          format: date-time
          type: string
        keyWorker:
          allOf:
          - $ref: "#/components/schemas/StaffMember"
          deprecated: true
          description: KeyWorker is a legacy field only used by CAS1. It is not longer
            being captured or populated
        serviceName:
          $ref: "#/components/schemas/ServiceName"
        bed:
          $ref: "#/components/schemas/Bed"
      required:
      - arrivalDate
      - createdAt
      - departureDate
      - id
      - originalArrivalDate
      - originalDepartureDate
      - person
      - serviceName
      type: object
    NewBooking:
      example:
        enableTurnarounds: true
        eventNumber: eventNumber
        bedId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        departureDate: 2022-09-30
        serviceName: approved-premises
        assessmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        crn: A123456
        arrivalDate: 2022-07-28
      properties:
        crn:
          example: A123456
          type: string
        arrivalDate:
          example: 2022-07-28
          format: date
          type: string
        departureDate:
          example: 2022-09-30
          format: date
          type: string
        bedId:
          format: uuid
          type: string
        serviceName:
          $ref: "#/components/schemas/ServiceName"
        enableTurnarounds:
          type: boolean
        assessmentId:
          format: uuid
          type: string
        eventNumber:
          type: string
      required:
      - arrivalDate
      - crn
      - departureDate
      - serviceName
      type: object
    NewPlacementRequestBooking:
      example:
        premisesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bedId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        departureDate: 2022-09-30
        arrivalDate: 2022-07-28
      properties:
        arrivalDate:
          example: 2022-07-28
          format: date
          type: string
        departureDate:
          example: 2022-09-30
          format: date
          type: string
        bedId:
          format: uuid
          type: string
        premisesId:
          format: uuid
          type: string
      required:
      - arrivalDate
      - departureDate
      type: object
    WithdrawPlacementRequest:
      example:
        reason: DuplicatePlacementRequest
      properties:
        reason:
          $ref: "#/components/schemas/WithdrawPlacementRequestReason"
      required:
      - reason
      type: object
    WithdrawPlacementRequestReason:
      enum:
      - DuplicatePlacementRequest
      - AlternativeProvisionIdentified
      - ChangeInCircumstances
      - ChangeInReleaseDecision
      - NoCapacityDueToLostBed
      - NoCapacityDueToPlacementPrioritisation
      - NoCapacity
      - ErrorInPlacementRequest
      - WithdrawnByPP
      - RelatedApplicationWithdrawn
      - RelatedPlacementRequestWithdrawn
      - RelatedPlacementApplicationWithdrawn
      type: string
    PlacementApplicationType:
      description: "'Initial' means that the request for placement was created for\
        \ the arrival date included on the original application. \n'Additional' means\
        \ the request for placement was created after the application had been assessed\
        \ as suitable.\nA given application should only have, at most, one request\
        \ for placement of type 'Initial'.\n"
      enum:
      - Initial
      - Additional
      type: string
    Booking:
      allOf:
      - $ref: "#/components/schemas/BookingBody"
      - properties:
          status:
            $ref: "#/components/schemas/BookingStatus"
          extensions:
            items:
              $ref: "#/components/schemas/Extension"
            type: array
          arrival:
            allOf:
            - $ref: "#/components/schemas/Arrival"
            nullable: true
          departure:
            allOf:
            - $ref: "#/components/schemas/Departure"
            description: "The latest version of the departure, if it exists"
            nullable: true
          departures:
            description: The full history of the departure
            items:
              $ref: "#/components/schemas/Departure"
            type: array
          nonArrival:
            allOf:
            - $ref: "#/components/schemas/Nonarrival"
            nullable: true
          cancellation:
            allOf:
            - $ref: "#/components/schemas/Cancellation"
            description: "The latest version of the cancellation, if it exists"
            nullable: true
          cancellations:
            description: The full history of the cancellation
            items:
              $ref: "#/components/schemas/Cancellation"
            type: array
          confirmation:
            allOf:
            - $ref: "#/components/schemas/Confirmation"
            nullable: true
          turnaround:
            allOf:
            - $ref: "#/components/schemas/Turnaround"
            description: "The latest version of the turnaround, if it exists"
            nullable: true
          turnarounds:
            description: The full history of turnarounds
            items:
              $ref: "#/components/schemas/Turnaround"
            type: array
          turnaroundStartDate:
            format: date
            type: string
          effectiveEndDate:
            format: date
            type: string
          applicationId:
            format: uuid
            type: string
          assessmentId:
            format: uuid
            type: string
          premises:
            $ref: "#/components/schemas/BookingPremisesSummary"
        required:
        - cancellations
        - departures
        - extensions
        - premises
        - status
        type: object
      example:
        bed:
          code: NEABC04
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bedEndDate: 2024-03-30
        effectiveEndDate: 2000-01-23
        arrival: ""
        turnaround: ""
        turnaroundStartDate: 2000-01-23
        originalDepartureDate: 2000-01-23
        createdAt: 2000-01-23T04:56:07.000+00:00
        premises:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        departureDate: 2000-01-23
        nonArrival: ""
        assessmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        originalArrivalDate: 2000-01-23
        confirmation: ""
        serviceName: approved-premises
        departures:
        - dateTime: 2000-01-23T04:56:07.000+00:00
          reason:
            parentReasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: Admitted to Hospital
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          destinationProvider:
            name: Ext - North East Region
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          notes: notes
          moveOnCategory:
            name: Housing Association - Rented
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - dateTime: 2000-01-23T04:56:07.000+00:00
          reason:
            parentReasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: Admitted to Hospital
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          destinationProvider:
            name: Ext - North East Region
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          notes: notes
          moveOnCategory:
            name: Housing Association - Rented
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        turnarounds:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          workingDays: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - createdAt: 2000-01-23T04:56:07.000+00:00
          workingDays: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        arrivalDate: 2000-01-23
        cancellations:
        - date: 2000-01-23
          reason:
            name: Recall
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          otherReason: otherReason
          notes: notes
          premisesName: premisesName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - date: 2000-01-23
          reason:
            name: Recall
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          otherReason: otherReason
          notes: notes
          premisesName: premisesName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        extensions:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          notes: notes
          previousDepartureDate: 2000-01-23
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          newDepartureDate: 2000-01-23
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - createdAt: 2000-01-23T04:56:07.000+00:00
          notes: notes
          previousDepartureDate: 2000-01-23
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          newDepartureDate: 2000-01-23
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cancellation: ""
        person:
          type: FullPerson
          crn: crn
        keyWorker: ""
        departure: ""
        applicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: arrived
    BookingPremisesSummary:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    ExtendedPremisesSummary:
      example:
        dateCapacities:
        - date: 2000-01-23
          availableBeds: 10
        - date: 2000-01-23
          availableBeds: 10
        name: name
        postcode: postcode
        availableBedsForToday: 6
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        apCode: apCode
        bookings:
        - bed:
            code: NEABC04
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            bedEndDate: 2024-03-30
          person:
            type: FullPerson
            crn: crn
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          departureDate: 2000-01-23
          arrivalDate: 2000-01-23
          status: arrived
        - bed:
            code: NEABC04
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            bedEndDate: 2024-03-30
          person:
            type: FullPerson
            crn: crn
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          departureDate: 2000-01-23
          arrivalDate: 2000-01-23
          status: arrived
        bedCount: 0
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        apCode:
          type: string
        postcode:
          type: string
        bedCount:
          type: integer
        availableBedsForToday:
          type: integer
        bookings:
          items:
            $ref: "#/components/schemas/PremisesBooking"
          type: array
        dateCapacities:
          items:
            $ref: "#/components/schemas/DateCapacity"
          type: array
      type: object
    PremisesBooking:
      example:
        bed:
          code: NEABC04
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bedEndDate: 2024-03-30
        person:
          type: FullPerson
          crn: crn
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        departureDate: 2000-01-23
        arrivalDate: 2000-01-23
        status: arrived
      properties:
        id:
          format: uuid
          type: string
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        person:
          $ref: "#/components/schemas/Person"
        bed:
          $ref: "#/components/schemas/Bed"
        status:
          $ref: "#/components/schemas/BookingStatus"
      type: object
    BookingSummary:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        premisesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        premisesName: premisesName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        departureDate: 2000-01-23
        type: space
        arrivalDate: 2000-01-23
      properties:
        id:
          format: uuid
          type: string
        premisesId:
          format: uuid
          type: string
        premisesName:
          type: string
        arrivalDate:
          format: date
          type: string
        departureDate:
          format: date
          type: string
        createdAt:
          format: date-time
          type: string
        type:
          enum:
          - space
          - legacy
          type: string
      required:
      - arrivalDate
      - createdAt
      - departureDate
      - id
      - premisesId
      - premisesName
      - type
      type: object
    Person:
      discriminator:
        mapping:
          FullPerson: "#/components/schemas/FullPerson"
          RestrictedPerson: "#/components/schemas/RestrictedPerson"
          UnknownPerson: "#/components/schemas/UnknownPerson"
        propertyName: type
      example:
        type: FullPerson
        crn: crn
      properties:
        crn:
          type: string
        type:
          $ref: "#/components/schemas/PersonType"
      required:
      - crn
      - type
      type: object
    UnknownPerson:
      allOf:
      - $ref: "#/components/schemas/Person"
    RestrictedPerson:
      allOf:
      - $ref: "#/components/schemas/Person"
    FullPerson:
      allOf:
      - $ref: "#/components/schemas/Person"
      - properties:
          name:
            type: string
          dateOfBirth:
            format: date
            type: string
          nomsNumber:
            type: string
          pncNumber:
            type: string
          ethnicity:
            type: string
          nationality:
            type: string
          religionOrBelief:
            type: string
          sex:
            type: string
          genderIdentity:
            type: string
          status:
            $ref: "#/components/schemas/PersonStatus"
          prisonName:
            type: string
          isRestricted:
            type: boolean
        required:
        - dateOfBirth
        - name
        - sex
        - status
        type: object
    PersonSummary:
      discriminator:
        mapping:
          FullPersonSummary: "#/components/schemas/FullPersonSummary"
          RestrictedPersonSummary: "#/components/schemas/RestrictedPersonSummary"
          UnknownPersonSummary: "#/components/schemas/UnknownPersonSummary"
        propertyName: personType
      example:
        personType: FullPersonSummary
        crn: crn
      properties:
        crn:
          type: string
        personType:
          $ref: "#/components/schemas/PersonSummaryDiscriminator"
      required:
      - crn
      - personType
      - type
      type: object
    PersonStatus:
      enum:
      - InCustody
      - InCommunity
      - Unknown
      type: string
    NewArrival:
      discriminator:
        mapping:
          CAS2: "#/components/schemas/NewCas2Arrival"
          CAS3: "#/components/schemas/NewCas3Arrival"
        propertyName: type
      example:
        notes: notes
        keyWorkerStaffCode: keyWorkerStaffCode
        type: type
        expectedDepartureDate: 2000-01-23
      properties:
        type:
          type: string
        expectedDepartureDate:
          format: date
          type: string
        notes:
          type: string
        keyWorkerStaffCode:
          type: string
      required:
      - expectedDepartureDate
      - type
      type: object
    NewCas2Arrival:
      allOf:
      - $ref: "#/components/schemas/NewArrival"
      - properties:
          arrivalDate:
            format: date
            type: string
        required:
        - arrivalDate
        type: object
    NewCas3Arrival:
      allOf:
      - $ref: "#/components/schemas/NewArrival"
      - properties:
          arrivalDate:
            format: date
            type: string
        required:
        - arrivalDate
        type: object
    Arrival:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        notes: notes
        keyWorkerStaffCode: keyWorkerStaffCode
        arrivalTime: arrivalTime
        expectedDepartureDate: 2000-01-23
        bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        arrivalDate: 2000-01-23
      properties:
        expectedDepartureDate:
          format: date
          type: string
        arrivalDate:
          format: date
          type: string
        arrivalTime:
          format: time
          type: string
        notes:
          type: string
        keyWorkerStaffCode:
          type: string
        bookingId:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - arrivalDate
      - arrivalTime
      - bookingId
      - createdAt
      - expectedDepartureDate
      - type
      type: object
    Nonarrival:
      properties:
        id:
          format: uuid
          type: string
        bookingId:
          format: uuid
          type: string
        date:
          format: date
          type: string
        reason:
          $ref: "#/components/schemas/NonArrivalReason"
        notes:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - bookingId
      - createdAt
      - date
      - id
      - reason
      type: object
    NewCancellation:
      example:
        date: 2000-01-23
        reason: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        otherReason: otherReason
        notes: notes
      properties:
        date:
          format: date
          type: string
        reason:
          format: uuid
          type: string
        notes:
          type: string
        otherReason:
          type: string
      required:
      - bookingId
      - date
      - reason
      type: object
    NewWithdrawal:
      example:
        reason: change_in_circumstances_new_application_to_be_submitted
        otherReason: otherReason
      properties:
        reason:
          $ref: "#/components/schemas/WithdrawalReason"
        otherReason:
          type: string
      required:
      - reason
      type: object
    Cancellation:
      example:
        date: 2000-01-23
        reason:
          name: Recall
          serviceScope: serviceScope
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        otherReason: otherReason
        notes: notes
        premisesName: premisesName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        bookingId:
          format: uuid
          type: string
        date:
          format: date
          type: string
        reason:
          $ref: "#/components/schemas/CancellationReason"
        notes:
          type: string
        createdAt:
          format: date-time
          type: string
        premisesName:
          type: string
        otherReason:
          type: string
      required:
      - bookingId
      - createdAt
      - date
      - premisesName
      - reason
      type: object
    Extension:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        notes: notes
        previousDepartureDate: 2000-01-23
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        newDepartureDate: 2000-01-23
        bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        bookingId:
          format: uuid
          type: string
        previousDepartureDate:
          format: date
          type: string
        newDepartureDate:
          format: date
          type: string
        notes:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - bookingId
      - createdAt
      - id
      - newDepartureDate
      - previousDepartureDate
      type: object
    NewExtension:
      example:
        notes: notes
        newDepartureDate: 2000-01-23
      properties:
        newDepartureDate:
          format: date
          type: string
        notes:
          type: string
      required:
      - newDepartureDate
      type: object
    DateChange:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        newArrivalDate: 2000-01-23
        previousDepartureDate: 2000-01-23
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        previousArrivalDate: 2000-01-23
        newDepartureDate: 2000-01-23
        bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        bookingId:
          format: uuid
          type: string
        previousArrivalDate:
          format: date
          type: string
        newArrivalDate:
          format: date
          type: string
        previousDepartureDate:
          format: date
          type: string
        newDepartureDate:
          format: date
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - bookingId
      - createdAt
      - id
      - newArrivalDate
      - newDepartureDate
      - previousArrivalDate
      - previousDepartureDate
      type: object
    NewDateChange:
      example:
        newArrivalDate: 2000-01-23
        newDepartureDate: 2000-01-23
      properties:
        newArrivalDate:
          format: date
          type: string
        newDepartureDate:
          format: date
          type: string
      type: object
    NewDeparture:
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        moveOnCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notes: notes
        reasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        destinationProviderId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        dateTime:
          format: date-time
          type: string
        reasonId:
          format: uuid
          type: string
        notes:
          type: string
        moveOnCategoryId:
          format: uuid
          type: string
        destinationProviderId:
          format: uuid
          type: string
      required:
      - dateTime
      - moveOnCategoryId
      - reasonId
      type: object
    Departure:
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        reason:
          parentReasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: Admitted to Hospital
          serviceScope: serviceScope
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
        destinationProvider:
          name: Ext - North East Region
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        notes: notes
        moveOnCategory:
          name: Housing Association - Rented
          serviceScope: serviceScope
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        bookingId:
          format: uuid
          type: string
        dateTime:
          format: date-time
          type: string
        reason:
          $ref: "#/components/schemas/DepartureReason"
        notes:
          type: string
        moveOnCategory:
          $ref: "#/components/schemas/MoveOnCategory"
        destinationProvider:
          $ref: "#/components/schemas/DestinationProvider"
        createdAt:
          format: date-time
          type: string
      required:
      - bookingId
      - createdAt
      - dateTime
      - id
      - moveOnCategory
      - reason
      type: object
    Confirmation:
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        notes: notes
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        bookingId:
          format: uuid
          type: string
        dateTime:
          format: date-time
          type: string
        notes:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - bookingId
      - createdAt
      - dateTime
      - id
      type: object
    NewConfirmation:
      example:
        notes: notes
      properties:
        notes:
          type: string
      type: object
    Turnaround:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        workingDays: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        bookingId:
          format: uuid
          type: string
        workingDays:
          type: integer
        createdAt:
          format: date-time
          type: string
      required:
      - bookingId
      - createdAt
      - id
      - workingDays
      type: object
    NewTurnaround:
      example:
        workingDays: 0
      properties:
        workingDays:
          type: integer
      required:
      - workingDays
      type: object
    Problem:
      example:
        instance: f7493e12-546d-42c3-b838-06c12671ab5b
        detail: You provided invalid request parameters
        type: https://example.net/validation-error
        title: Invalid request parameters
        status: 400
      properties:
        type:
          example: https://example.net/validation-error
          type: string
        title:
          example: Invalid request parameters
          type: string
        status:
          example: 400
          type: integer
        detail:
          example: You provided invalid request parameters
          type: string
        instance:
          example: f7493e12-546d-42c3-b838-06c12671ab5b
          type: string
      type: object
    ValidationError:
      allOf:
      - $ref: "#/components/schemas/Problem"
      - properties:
          invalid-params:
            items:
              $ref: "#/components/schemas/InvalidParam"
            type: array
        type: object
    InvalidParam:
      properties:
        propertyName:
          example: arrivalDate
          type: string
        errorType:
          type: string
      type: object
    LostBed:
      example:
        reason:
          name: Double Room with Single Occupancy - Other (Non-FM)
          serviceScope: serviceScope
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
        notes: notes
        cancellation: ""
        endDate: 2000-01-23
        referenceNumber: referenceNumber
        bedId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDate: 2000-01-23
        bedName: bedName
        roomName: roomName
        status: active
      properties:
        id:
          format: uuid
          type: string
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        bedId:
          format: uuid
          type: string
        bedName:
          type: string
        roomName:
          type: string
        reason:
          $ref: "#/components/schemas/LostBedReason"
        referenceNumber:
          type: string
        notes:
          type: string
        status:
          $ref: "#/components/schemas/LostBedStatus"
        cancellation:
          allOf:
          - $ref: "#/components/schemas/LostBedCancellation"
          nullable: true
      required:
      - bedId
      - bedName
      - endDate
      - id
      - reason
      - roomName
      - startDate
      - status
      type: object
    NewLostBed:
      example:
        reason: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notes: notes
        endDate: 2000-01-23
        referenceNumber: referenceNumber
        bedId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDate: 2000-01-23
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        reason:
          format: uuid
          type: string
        referenceNumber:
          type: string
        notes:
          type: string
        bedId:
          format: uuid
          type: string
      required:
      - bedId
      - endDate
      - reason
      - startDate
      type: object
    UpdateLostBed:
      example:
        reason: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notes: notes
        endDate: 2000-01-23
        referenceNumber: referenceNumber
        startDate: 2000-01-23
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        reason:
          format: uuid
          type: string
        referenceNumber:
          type: string
        notes:
          type: string
      required:
      - endDate
      - reason
      - startDate
      type: object
    LostBedCancellation:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        notes: notes
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        notes:
          type: string
      required:
      - createdAt
      - id
      type: object
    NewLostBedCancellation:
      example:
        notes: notes
      properties:
        notes:
          type: string
      type: object
    LostBedStatus:
      enum:
      - active
      - cancelled
      type: string
    DepartureReason:
      example:
        parentReasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: Admitted to Hospital
        serviceScope: serviceScope
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: Admitted to Hospital
          type: string
        serviceScope:
          type: string
        parentReasonId:
          format: uuid
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      - serviceScope
      type: object
    MoveOnCategory:
      example:
        name: Housing Association - Rented
        serviceScope: serviceScope
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: Housing Association - Rented
          type: string
        serviceScope:
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      - serviceScope
      type: object
    DestinationProvider:
      example:
        name: Ext - North East Region
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: Ext - North East Region
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      type: object
    SupervisingProvider:
      example:
        name: North East Region
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: North East Region
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      type: object
    SupervisingTeam:
      example:
        name: CP - Sheffield
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: CP - Sheffield
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      type: object
    SupervisingOfficer:
      example:
        name: "Smith, John (PS - PO)"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: "Smith, John (PS - PO)"
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      type: object
    StaffMember:
      example:
        code: code
        keyWorker: true
        name: "Brown, James (PS - PSO)"
      properties:
        code:
          type: string
        keyWorker:
          type: boolean
        name:
          example: "Brown, James (PS - PSO)"
          type: string
      required:
      - code
      - keyWorker
      - name
      type: object
    LostBedReason:
      example:
        name: Double Room with Single Occupancy - Other (Non-FM)
        serviceScope: serviceScope
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: Double Room with Single Occupancy - Other (Non-FM)
          type: string
        isActive:
          type: boolean
        serviceScope:
          type: string
      required:
      - id
      - isActive
      - name
      - serviceScope
      type: object
    CancellationReason:
      example:
        name: Recall
        serviceScope: serviceScope
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: Recall
          type: string
        isActive:
          type: boolean
        serviceScope:
          type: string
      required:
      - id
      - isActive
      - name
      - serviceScope
      type: object
    NonArrivalReason:
      example:
        name: Recall
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: Recall
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      type: object
    DateCapacity:
      example:
        date: 2000-01-23
        availableBeds: 10
      properties:
        date:
          format: date
          type: string
        availableBeds:
          example: 10
          type: integer
      required:
      - availableBeds
      - date
      type: object
    PersonRisks:
      example:
        mappa:
          value:
            lastUpdated: 2000-01-23
            level: level
          status: null
        tier:
          value:
            lastUpdated: 2000-01-23
            level: level
          status: null
        roshRisks:
          value:
            lastUpdated: 2000-01-23
            overallRisk: overallRisk
            riskToChildren: riskToChildren
            riskToPublic: riskToPublic
            riskToKnownAdult: riskToKnownAdult
            riskToStaff: riskToStaff
          status: retrieved
        flags:
          value:
          - value
          - value
          status: null
        crn: crn
      properties:
        crn:
          type: string
        roshRisks:
          $ref: "#/components/schemas/RoshRisksEnvelope"
        mappa:
          $ref: "#/components/schemas/MappaEnvelope"
        tier:
          $ref: "#/components/schemas/RiskTierEnvelope"
        flags:
          $ref: "#/components/schemas/FlagsEnvelope"
      required:
      - crn
      - flags
      - roshRisks
      - tier
      type: object
    RoshRisksEnvelope:
      example:
        value:
          lastUpdated: 2000-01-23
          overallRisk: overallRisk
          riskToChildren: riskToChildren
          riskToPublic: riskToPublic
          riskToKnownAdult: riskToKnownAdult
          riskToStaff: riskToStaff
        status: retrieved
      properties:
        status:
          $ref: "#/components/schemas/RiskEnvelopeStatus"
        value:
          $ref: "#/components/schemas/RoshRisks"
      required:
      - status
      type: object
    RoshRisks:
      example:
        lastUpdated: 2000-01-23
        overallRisk: overallRisk
        riskToChildren: riskToChildren
        riskToPublic: riskToPublic
        riskToKnownAdult: riskToKnownAdult
        riskToStaff: riskToStaff
      properties:
        overallRisk:
          type: string
        riskToChildren:
          type: string
        riskToPublic:
          type: string
        riskToKnownAdult:
          type: string
        riskToStaff:
          type: string
        lastUpdated:
          format: date
          type: string
      required:
      - overallRisk
      - riskToChildren
      - riskToKnownAdult
      - riskToPublic
      - riskToStaff
      type: object
    MappaEnvelope:
      example:
        value:
          lastUpdated: 2000-01-23
          level: level
        status: null
      properties:
        status:
          $ref: "#/components/schemas/RiskEnvelopeStatus"
        value:
          $ref: "#/components/schemas/Mappa"
      required:
      - status
      type: object
    Mappa:
      example:
        lastUpdated: 2000-01-23
        level: level
      properties:
        level:
          type: string
        lastUpdated:
          format: date
          type: string
      required:
      - lastUpdated
      - level
      type: object
    RiskTierEnvelope:
      example:
        value:
          lastUpdated: 2000-01-23
          level: level
        status: null
      properties:
        status:
          $ref: "#/components/schemas/RiskEnvelopeStatus"
        value:
          $ref: "#/components/schemas/RiskTier"
      required:
      - status
      type: object
    RiskTier:
      example:
        lastUpdated: 2000-01-23
        level: level
      properties:
        level:
          type: string
        lastUpdated:
          format: date
          type: string
      required:
      - lastUpdated
      - level
      type: object
    FlagsEnvelope:
      example:
        value:
        - value
        - value
        status: null
      properties:
        status:
          $ref: "#/components/schemas/RiskEnvelopeStatus"
        value:
          items:
            type: string
          type: array
      required:
      - status
      type: object
    RiskEnvelopeStatus:
      enum:
      - retrieved
      - not_found
      - error
      type: string
    PersonAcctAlert:
      example:
        dateCreated: 2000-01-23
        expired: true
        dateExpires: 2000-01-23
        active: true
        comment: comment
        alertId: 0
      properties:
        alertId:
          format: int64
          type: integer
        comment:
          type: string
        dateCreated:
          format: date
          type: string
        dateExpires:
          format: date
          type: string
        expired:
          type: boolean
        active:
          type: boolean
      required:
      - active
      - alertId
      - dateCreated
      - expired
      type: object
    Application:
      discriminator:
        mapping:
          Offline: "#/components/schemas/OfflineApplication"
          CAS1: "#/components/schemas/ApprovedPremisesApplication"
          CAS2: "#/components/schemas/Cas2Application"
          CAS3: "#/components/schemas/TemporaryAccommodationApplication"
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        person:
          type: FullPerson
          crn: crn
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
      properties:
        type:
          type: string
        id:
          format: uuid
          type: string
        person:
          $ref: "#/components/schemas/Person"
        createdAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - person
      - type
      type: object
    OfflineApplication:
      allOf:
      - $ref: "#/components/schemas/Application"
    ApprovedPremisesApplication:
      allOf:
      - $ref: "#/components/schemas/Application"
      - properties:
          isWomensApplication:
            type: boolean
          isPipeApplication:
            deprecated: true
            description: Use apType
            type: boolean
          isEmergencyApplication:
            type: boolean
          isEsapApplication:
            deprecated: true
            description: Use apType
            type: boolean
          apType:
            $ref: "#/components/schemas/ApType"
          arrivalDate:
            format: date-time
            type: string
          risks:
            $ref: "#/components/schemas/PersonRisks"
          createdByUserId:
            format: uuid
            type: string
          schemaVersion:
            format: uuid
            type: string
          outdatedSchema:
            type: boolean
          data:
            $ref: "#/components/schemas/AnyValue"
          document:
            $ref: "#/components/schemas/AnyValue"
          status:
            $ref: "#/components/schemas/ApprovedPremisesApplicationStatus"
          assessmentId:
            format: uuid
            type: string
          assessmentDecision:
            $ref: "#/components/schemas/AssessmentDecision"
          assessmentDecisionDate:
            format: date
            type: string
          submittedAt:
            format: date-time
            type: string
          personStatusOnSubmission:
            $ref: "#/components/schemas/PersonStatus"
          apArea:
            $ref: "#/components/schemas/ApArea"
          cruManagementArea:
            $ref: "#/components/schemas/Cas1CruManagementArea"
          applicantUserDetails:
            $ref: "#/components/schemas/Cas1ApplicationUserDetails"
          caseManagerIsNotApplicant:
            description: "If true, caseManagerUserDetails will provide case manager\
              \ details. Otherwise, applicantUserDetails can be used for case manager\
              \ details"
            type: boolean
          caseManagerUserDetails:
            $ref: "#/components/schemas/Cas1ApplicationUserDetails"
          licenceExpiryDate:
            format: date
            type: string
        required:
        - createdByUserId
        - outdatedSchema
        - schemaVersion
        - status
        type: object
    Cas2Application:
      allOf:
      - $ref: "#/components/schemas/Application"
      - properties:
          createdBy:
            $ref: "#/components/schemas/NomisUser"
          schemaVersion:
            format: uuid
            type: string
          outdatedSchema:
            type: boolean
          data:
            $ref: "#/components/schemas/AnyValue"
          document:
            $ref: "#/components/schemas/AnyValue"
          status:
            $ref: "#/components/schemas/ApplicationStatus"
          submittedAt:
            format: date-time
            type: string
          telephoneNumber:
            type: string
          assessment:
            $ref: "#/components/schemas/Cas2Assessment"
          timelineEvents:
            items:
              $ref: "#/components/schemas/Cas2TimelineEvent"
            type: array
        required:
        - createdBy
        - outdatedSchema
        - schemaVersion
        - status
        type: object
    Cas2SubmittedApplication:
      properties:
        id:
          format: uuid
          type: string
        person:
          $ref: "#/components/schemas/Person"
        createdAt:
          format: date-time
          type: string
        submittedBy:
          $ref: "#/components/schemas/NomisUser"
        schemaVersion:
          format: uuid
          type: string
        outdatedSchema:
          type: boolean
        document:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
        submittedAt:
          format: date-time
          type: string
        telephoneNumber:
          type: string
        timelineEvents:
          items:
            $ref: "#/components/schemas/Cas2TimelineEvent"
          type: array
        assessment:
          $ref: "#/components/schemas/Cas2Assessment"
      required:
      - assessment
      - createdAt
      - createdBy
      - id
      - outdatedSchema
      - person
      - schemaVersion
      - status
      - timelineEvents
      type: object
    TemporaryAccommodationApplication:
      allOf:
      - $ref: "#/components/schemas/Application"
      - properties:
          createdByUserId:
            format: uuid
            type: string
          schemaVersion:
            format: uuid
            type: string
          outdatedSchema:
            type: boolean
          data:
            $ref: "#/components/schemas/AnyValue"
          document:
            $ref: "#/components/schemas/AnyValue"
          status:
            $ref: "#/components/schemas/ApplicationStatus"
          risks:
            $ref: "#/components/schemas/PersonRisks"
          submittedAt:
            format: date-time
            type: string
          arrivalDate:
            format: date-time
            type: string
          offenceId:
            type: string
          assessmentId:
            format: uuid
            type: string
        required:
        - createdByUserId
        - offenceId
        - outdatedSchema
        - schemaVersion
        - status
        type: object
    ApplicationSummary:
      discriminator:
        mapping:
          Offline: "#/components/schemas/OfflineApplicationSummary"
          CAS1: "#/components/schemas/ApprovedPremisesApplicationSummary"
          CAS2: "#/components/schemas/Cas2ApplicationSummary"
          CAS3: "#/components/schemas/TemporaryAccommodationApplicationSummary"
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        person:
          type: FullPerson
          crn: crn
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        submittedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        type:
          type: string
        id:
          format: uuid
          type: string
        person:
          $ref: "#/components/schemas/Person"
        createdAt:
          format: date-time
          type: string
        submittedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - person
      - type
      type: object
    OfflineApplicationSummary:
      allOf:
      - $ref: "#/components/schemas/ApplicationSummary"
    ApprovedPremisesApplicationSummary:
      allOf:
      - $ref: "#/components/schemas/ApplicationSummary"
      - properties:
          isWomensApplication:
            type: boolean
          isPipeApplication:
            type: boolean
          isEmergencyApplication:
            type: boolean
          isEsapApplication:
            type: boolean
          arrivalDate:
            format: date-time
            type: string
          risks:
            $ref: "#/components/schemas/PersonRisks"
          createdByUserId:
            format: uuid
            type: string
          status:
            $ref: "#/components/schemas/ApprovedPremisesApplicationStatus"
          tier:
            type: string
          isWithdrawn:
            type: boolean
          releaseType:
            $ref: "#/components/schemas/ReleaseTypeOption"
          hasRequestsForPlacement:
            type: boolean
        required:
        - createdByUserId
        - hasRequestsForPlacement
        - isWithdrawn
        - status
        type: object
    TemporaryAccommodationApplicationSummary:
      allOf:
      - $ref: "#/components/schemas/ApplicationSummary"
      - properties:
          createdByUserId:
            format: uuid
            type: string
          status:
            $ref: "#/components/schemas/ApplicationStatus"
          risks:
            $ref: "#/components/schemas/PersonRisks"
        required:
        - createdByUserId
        - status
        type: object
    Cas2ApplicationSummary:
      properties:
        type:
          type: string
        id:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        submittedAt:
          format: date-time
          type: string
        createdByUserId:
          format: uuid
          type: string
        createdByUserName:
          type: string
        status:
          $ref: "#/components/schemas/ApplicationStatus"
        latestStatusUpdate:
          $ref: "#/components/schemas/LatestCas2StatusUpdate"
        risks:
          $ref: "#/components/schemas/PersonRisks"
        hdcEligibilityDate:
          format: date
          type: string
        personName:
          type: string
        crn:
          type: string
        nomsNumber:
          type: string
      required:
      - createdAt
      - createdByUserId
      - crn
      - id
      - nomsNumber
      - personName
      - status
      - type
      type: object
    NewCas2ApplicationNote:
      description: A note to add to an application
      properties:
        note:
          type: string
      required:
      - note
      type: object
    Cas2ApplicationNote:
      description: Notes added to an application
      properties:
        id:
          format: uuid
          type: string
        email:
          example: roger@example.com
          type: string
        name:
          example: Roger Smith
          type: string
        body:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - body
      - createdAt
      - email
      - name
      - username
      type: object
    Cas2ApplicationStatus:
      properties:
        id:
          format: uuid
          type: string
        name:
          example: moreInfoRequested
          type: string
        label:
          example: More information requested
          type: string
        description:
          example: More information about the application has been requested from
            the POM (Prison Offender Manager).
          type: string
        statusDetails:
          items:
            $ref: "#/components/schemas/Cas2ApplicationStatusDetail"
          type: array
      required:
      - description
      - id
      - label
      - name
      - statusDetails
      type: object
    Cas2ApplicationStatusDetail:
      properties:
        id:
          format: uuid
          type: string
        name:
          example: changeOfCircumstances
          type: string
        label:
          example: Change of Circumstances
          type: string
      required:
      - id
      - label
      - name
      type: object
    Cas2AssessmentStatusUpdate:
      properties:
        newStatus:
          description: The "name" of the new status to be applied
          example: moreInfoRequired
          type: string
        newStatusDetails:
          items:
            description: The "name" of the new detail belonging to the new status
            example: changeOfCircumstances
            type: string
          type: array
      required:
      - newStatus
      type: object
    Cas2SubmittedApplicationSummary:
      properties:
        id:
          format: uuid
          type: string
        createdByUserId:
          format: uuid
          type: string
        crn:
          type: string
        nomsNumber:
          type: string
        personName:
          type: string
        createdAt:
          format: date-time
          type: string
        submittedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - createdByUserId
      - crn
      - id
      - nomsNumber
      - person
      - personName
      - status
      type: object
    Cas2StatusUpdate:
      properties:
        id:
          format: uuid
          type: string
        name:
          example: moreInfoRequested
          type: string
        label:
          example: More information requested
          type: string
        description:
          example: More information about the application has been requested from
            the POM (Prison Offender Manager).
          type: string
        updatedBy:
          $ref: "#/components/schemas/ExternalUser"
        updatedAt:
          format: date-time
          type: string
        statusUpdateDetails:
          items:
            $ref: "#/components/schemas/Cas2StatusUpdateDetail"
          type: array
      required:
      - description
      - id
      - label
      - name
      type: object
    Cas2StatusUpdateDetail:
      properties:
        id:
          format: uuid
          type: string
        name:
          example: moreInfoRequested
          type: string
        label:
          example: More information requested
          type: string
      required:
      - id
      - label
      - name
      type: object
    LatestCas2StatusUpdate:
      properties:
        statusId:
          format: uuid
          type: string
        label:
          example: More information requested
          type: string
      required:
      - label
      - statusId
      type: object
    ApplicationStatus:
      enum:
      - inProgress
      - submitted
      - requestedFurtherInformation
      - pending
      - rejected
      - awaitingPlacement
      - placed
      - inapplicable
      - withdrawn
      type: string
    ApprovedPremisesApplicationStatus:
      enum:
      - started
      - submitted
      - rejected
      - awaitingAssesment
      - unallocatedAssesment
      - assesmentInProgress
      - awaitingPlacement
      - placementAllocated
      - inapplicable
      - withdrawn
      - requestedFurtherInformation
      - pendingPlacementRequest
      - expired
      type: string
    AnyValue:
      description: Any object that conforms to the current JSON schema for an application
      type: object
    ApplicationTimelineNote:
      description: Notes added to an application
      example:
        note: note
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdByUser:
          telephoneNumber: telephoneNumber
          service: service
          deliusUsername: deliusUsername
          name: name
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        createdByUser:
          $ref: "#/components/schemas/User"
        note:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - createdByUserId
      - note
      type: object
    NewApplicationTimelineNote:
      description: A note to add to an application
      example:
        note: note
      properties:
        note:
          type: string
      required:
      - note
      type: object
    NewApplication:
      example:
        offenceId: M1502750438
        convictionId: 1502724704
        deliusEventNumber: "7"
        crn: crn
      properties:
        crn:
          type: string
        convictionId:
          example: 1502724704
          format: int64
          type: integer
        deliusEventNumber:
          example: "7"
          type: string
        offenceId:
          example: M1502750438
          type: string
      required:
      - crn
      type: object
    UpdateApplicationType:
      enum:
      - CAS1
      - CAS2
      - CAS3
      type: string
      x-enum-varnames:
      - CAS1
      - CAS2
      - CAS3
    UpdateApplication:
      discriminator:
        mapping:
          CAS1: "#/components/schemas/UpdateApprovedPremisesApplication"
          CAS2: "#/components/schemas/UpdateCas2Application"
          CAS3: "#/components/schemas/UpdateTemporaryAccommodationApplication"
        propertyName: type
      example:
        data:
          key: null
        type: CAS1
      properties:
        type:
          $ref: "#/components/schemas/UpdateApplicationType"
        data:
          additionalProperties:
            $ref: "#/components/schemas/AnyValue"
          type: object
      required:
      - data
      - type
      type: object
    UpdateCas2Application:
      allOf:
      - $ref: "#/components/schemas/UpdateApplication"
    UpdateApprovedPremisesApplication:
      allOf:
      - $ref: "#/components/schemas/UpdateApplication"
      - properties:
          isInapplicable:
            type: boolean
          isWomensApplication:
            type: boolean
          isPipeApplication:
            deprecated: true
            description: Use apType
            type: boolean
          isEmergencyApplication:
            deprecated: true
            description: noticeType should be used to indicate if an emergency application
            type: boolean
          isEsapApplication:
            deprecated: true
            description: Use apType
            type: boolean
          apType:
            $ref: "#/components/schemas/ApType"
          targetLocation:
            type: string
          releaseType:
            $ref: "#/components/schemas/ReleaseTypeOption"
          arrivalDate:
            format: date
            type: string
          noticeType:
            $ref: "#/components/schemas/Cas1ApplicationTimelinessCategory"
        type: object
    UpdateTemporaryAccommodationApplication:
      allOf:
      - $ref: "#/components/schemas/UpdateApplication"
    SubmitApplication:
      discriminator:
        mapping:
          CAS1: "#/components/schemas/SubmitApprovedPremisesApplication"
          CAS3: "#/components/schemas/SubmitTemporaryAccommodationApplication"
          CAS2: "#/components/schemas/SubmitCas2Application"
        propertyName: type
      example:
        translatedDocument: "{}"
        type: type
      properties:
        type:
          type: string
        translatedDocument:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
      required:
      - type
      type: object
    SubmitApprovedPremisesApplication:
      allOf:
      - $ref: "#/components/schemas/SubmitApplication"
      - properties:
          isPipeApplication:
            deprecated: true
            description: Use apType
            type: boolean
          isWomensApplication:
            type: boolean
          isEmergencyApplication:
            deprecated: true
            description: noticeType should be used to indicate if this an emergency
              application
            type: boolean
          isEsapApplication:
            deprecated: true
            description: Use apType
            type: boolean
          apType:
            $ref: "#/components/schemas/ApType"
          targetLocation:
            type: string
          releaseType:
            $ref: "#/components/schemas/ReleaseTypeOption"
          sentenceType:
            $ref: "#/components/schemas/SentenceTypeOption"
          situation:
            $ref: "#/components/schemas/SituationOption"
          arrivalDate:
            format: date
            type: string
          apAreaId:
            description: "If the user's ap area id is incorrect, they can optionally\
              \ override it for the application"
            format: uuid
            type: string
          applicantUserDetails:
            $ref: "#/components/schemas/Cas1ApplicationUserDetails"
          caseManagerIsNotApplicant:
            type: boolean
          caseManagerUserDetails:
            $ref: "#/components/schemas/Cas1ApplicationUserDetails"
          noticeType:
            $ref: "#/components/schemas/Cas1ApplicationTimelinessCategory"
          reasonForShortNotice:
            type: string
          reasonForShortNoticeOther:
            type: string
          licenseExpiryDate:
            format: date
            type: string
        required:
        - releaseType
        - sentenceType
        - targetLocation
        type: object
    SubmitCas2Application:
      properties:
        translatedDocument:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
        applicationId:
          description: Id of the application being submitted
          format: uuid
          type: string
        preferredAreas:
          description: "First and second preferences for where the accommodation should\
            \ be located, pipe-separated"
          example: Leeds | Bradford
          type: string
        hdcEligibilityDate:
          example: 2023-03-30
          format: date
          type: string
        conditionalReleaseDate:
          example: 2023-04-30
          format: date
          type: string
        telephoneNumber:
          type: string
      required:
      - applicationId
      - telephoneNumber
      - translatedDocument
      type: object
    SubmitTemporaryAccommodationApplication:
      allOf:
      - $ref: "#/components/schemas/SubmitApplication"
      - properties:
          arrivalDate:
            format: date
            type: string
          isRegisteredSexOffender:
            type: boolean
          needsAccessibleProperty:
            type: boolean
          hasHistoryOfArson:
            type: boolean
          isDutyToReferSubmitted:
            type: boolean
          dutyToReferSubmissionDate:
            format: date
            type: string
          dutyToReferOutcome:
            example: Pending
            type: string
          isApplicationEligible:
            type: boolean
          eligibilityReason:
            type: string
          dutyToReferLocalAuthorityAreaName:
            type: string
          personReleaseDate:
            example: 2024-02-21
            format: date
            type: string
          pdu:
            type: string
          probationDeliveryUnitId:
            format: uuid
            type: string
          isHistoryOfSexualOffence:
            type: boolean
          isConcerningSexualBehaviour:
            type: boolean
          isConcerningArsonBehaviour:
            type: boolean
          prisonReleaseTypes:
            items:
              example: PSS
              type: string
            type: array
          summaryData:
            $ref: "#/components/schemas/AnyValue"
        required:
        - arrivalDate
        - summaryData
        type: object
    ReleaseTypeOption:
      enum:
      - licence
      - rotl
      - hdc
      - pss
      - in_community
      - not_applicable
      - extendedDeterminateLicence
      - paroleDirectedLicence
      - reReleasedPostRecall
      type: string
    SentenceTypeOption:
      enum:
      - standardDeterminate
      - life
      - ipp
      - extendedDeterminate
      - communityOrder
      - bailPlacement
      - nonStatutory
      type: string
    SituationOption:
      enum:
      - riskManagement
      - residencyManagement
      - bailAssessment
      - bailSentence
      - awaitingSentence
      type: string
    Cas1ApplicationTimelinessCategory:
      enum:
      - standard
      - emergency
      - shortNotice
      type: string
    PrisonCaseNote:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        note: note
        occurredAt: 2000-01-23T04:56:07.000+00:00
        authorName: authorName
        subType: subType
        id: id
        sensitive: true
        type: type
      properties:
        id:
          type: string
        sensitive:
          type: boolean
        createdAt:
          format: date-time
          type: string
        occurredAt:
          format: date-time
          type: string
        authorName:
          type: string
        type:
          type: string
        subType:
          type: string
        note:
          type: string
      required:
      - authorName
      - createdAt
      - id
      - note
      - occurredAt
      - sensitive
      - subType
      - type
      type: object
    Adjudication:
      example:
        reportedAt: 2000-01-23T04:56:07.000+00:00
        establishment: establishment
        id: 0
        finding: finding
        offenceDescription: Wounding or inflicting grievous bodily harm (inflicting
          bodily injury with or without weapon) (S20) - 00801
        hearingHeld: true
      properties:
        id:
          format: int64
          type: integer
        reportedAt:
          format: date-time
          type: string
        establishment:
          type: string
        offenceDescription:
          example: Wounding or inflicting grievous bodily harm (inflicting bodily
            injury with or without weapon) (S20) - 00801
          type: string
        hearingHeld:
          type: boolean
        finding:
          type: string
      required:
      - establishment
      - hearingHeld
      - id
      - offenceDescription
      - reportedAt
      type: object
    Assessment:
      discriminator:
        mapping:
          CAS1: "#/components/schemas/ApprovedPremisesAssessment"
          CAS3: "#/components/schemas/TemporaryAccommodationAssessment"
        propertyName: service
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        schemaVersion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        decision: accepted
        data: "{}"
        referralHistoryNotes:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdByUserName: createdByUserName
          messageDetails:
            isWithdrawn: true
            rejectionReason: rejectionReason
            domainEvent: "{}"
            rejectionReasonDetails: rejectionReasonDetails
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          type: type
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdByUserName: createdByUserName
          messageDetails:
            isWithdrawn: true
            rejectionReason: rejectionReason
            domainEvent: "{}"
            rejectionReasonDetails: rejectionReasonDetails
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          message: message
          type: type
        service: service
        rejectionRationale: rejectionRationale
        outdatedSchema: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        submittedAt: 2000-01-23T04:56:07.000+00:00
        allocatedAt: 2000-01-23T04:56:07.000+00:00
        clarificationNotes:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          response: response
          query: query
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          responseReceivedOn: 2000-01-23
          createdByStaffMemberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - createdAt: 2000-01-23T04:56:07.000+00:00
          response: response
          query: query
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          responseReceivedOn: 2000-01-23
          createdByStaffMemberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        service:
          type: string
        id:
          format: uuid
          type: string
        schemaVersion:
          format: uuid
          type: string
        outdatedSchema:
          type: boolean
        createdAt:
          format: date-time
          type: string
        allocatedAt:
          format: date-time
          type: string
        submittedAt:
          format: date-time
          type: string
        decision:
          $ref: "#/components/schemas/AssessmentDecision"
        rejectionRationale:
          type: string
        data:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
        clarificationNotes:
          items:
            $ref: "#/components/schemas/ClarificationNote"
          type: array
        referralHistoryNotes:
          items:
            $ref: "#/components/schemas/ReferralHistoryNote"
          type: array
      required:
      - allocatedToUser
      - clarificationNotes
      - createdAt
      - id
      - outdatedSchema
      - schemaVersion
      - service
      type: object
    AssessmentStatus:
      enum:
      - awaiting_response
      - completed
      - reallocated
      - in_progress
      - not_started
      - unallocated
      - in_review
      - ready_to_place
      - closed
      - rejected
      type: string
      x-enum-varnames:
      - cas1AwaitingResponse
      - cas1Completed
      - cas1Reallocated
      - cas1InProgress
      - cas1NotStarted
      - cas3Unallocated
      - cas3InReview
      - cas3ReadyToPlace
      - cas3Closed
      - cas3Rejected
    ApprovedPremisesAssessmentStatus:
      enum:
      - awaiting_response
      - completed
      - reallocated
      - in_progress
      - not_started
      type: string
    TemporaryAccommodationAssessmentStatus:
      enum:
      - unallocated
      - in_review
      - ready_to_place
      - closed
      - rejected
      type: string
    ApprovedPremisesAssessment:
      allOf:
      - $ref: "#/components/schemas/Assessment"
      - properties:
          application:
            $ref: "#/components/schemas/ApprovedPremisesApplication"
          allocatedToStaffMember:
            $ref: "#/components/schemas/ApprovedPremisesUser"
          status:
            $ref: "#/components/schemas/ApprovedPremisesAssessmentStatus"
          createdFromAppeal:
            type: boolean
        required:
        - application
        - createdFromAppeal
        type: object
    TemporaryAccommodationAssessment:
      allOf:
      - $ref: "#/components/schemas/Assessment"
      - properties:
          application:
            $ref: "#/components/schemas/TemporaryAccommodationApplication"
          allocatedToStaffMember:
            $ref: "#/components/schemas/TemporaryAccommodationUser"
          status:
            $ref: "#/components/schemas/TemporaryAccommodationAssessmentStatus"
          summaryData:
            $ref: "#/components/schemas/AnyValue"
          releaseDate:
            format: date
            type: string
          accommodationRequiredFromDate:
            format: date
            type: string
        required:
        - application
        - summaryData
        type: object
    Cas2Assessment:
      properties:
        id:
          format: uuid
          type: string
        nacroReferralId:
          type: string
        assessorName:
          type: string
        statusUpdates:
          items:
            $ref: "#/components/schemas/Cas2StatusUpdate"
          type: array
      required:
      - id
      type: object
    UpdateCas2Assessment:
      properties:
        nacroReferralId:
          type: string
        assessorName:
          type: string
      type: object
    AssessmentSummary:
      discriminator:
        mapping:
          CAS1: "#/components/schemas/ApprovedPremisesAssessmentSummary"
          CAS3: "#/components/schemas/TemporaryAccommodationAssessmentSummary"
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        risks:
          mappa:
            value:
              lastUpdated: 2000-01-23
              level: level
            status: null
          tier:
            value:
              lastUpdated: 2000-01-23
              level: level
            status: null
          roshRisks:
            value:
              lastUpdated: 2000-01-23
              overallRisk: overallRisk
              riskToChildren: riskToChildren
              riskToPublic: riskToPublic
              riskToKnownAdult: riskToKnownAdult
              riskToStaff: riskToStaff
            status: retrieved
          flags:
            value:
            - value
            - value
            status: null
          crn: crn
        decision: accepted
        person:
          type: FullPerson
          crn: crn
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        dateOfInfoRequest: 2000-01-23T04:56:07.000+00:00
        type: type
        applicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        arrivalDate: 2000-01-23T04:56:07.000+00:00
      properties:
        type:
          type: string
        id:
          format: uuid
          type: string
        applicationId:
          format: uuid
          type: string
        arrivalDate:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        dateOfInfoRequest:
          format: date-time
          type: string
        decision:
          $ref: "#/components/schemas/AssessmentDecision"
        risks:
          $ref: "#/components/schemas/PersonRisks"
        person:
          $ref: "#/components/schemas/Person"
      required:
      - applicationId
      - createdAt
      - id
      - person
      - type
      type: object
    ApprovedPremisesAssessmentSummary:
      allOf:
      - $ref: "#/components/schemas/AssessmentSummary"
      - properties:
          status:
            $ref: "#/components/schemas/ApprovedPremisesAssessmentStatus"
          dueAt:
            format: date-time
            type: string
        required:
        - dueAt
        - status
        type: object
    TemporaryAccommodationAssessmentSummary:
      allOf:
      - $ref: "#/components/schemas/AssessmentSummary"
      - properties:
          status:
            $ref: "#/components/schemas/TemporaryAccommodationAssessmentStatus"
          probationDeliveryUnitName:
            type: string
        required:
        - status
        type: object
    AssessmentSortField:
      enum:
      - name
      - crn
      - arrivalDate
      - status
      - createdAt
      - dueAt
      - probationDeliveryUnitName
      type: string
      x-enum-varnames:
      - personName
      - personCrn
      - assessmentArrivalDate
      - assessmentStatus
      - assessmentCreatedAt
      - assessmentDueAt
      - applicationProbationDeliveryUnitName
    AssessmentDecision:
      enum:
      - accepted
      - rejected
      type: string
    UpdatePremises:
      example:
        pdu: pdu
        notes: notes
        town: town
        postcode: postcode
        probationDeliveryUnitId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        characteristicIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        turnaroundWorkingDayCount: 0
        name: name
        addressLine1: addressLine1
        probationRegionId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        addressLine2: addressLine2
        localAuthorityAreaId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: pending
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
        notes:
          type: string
        localAuthorityAreaId:
          format: uuid
          type: string
        probationRegionId:
          format: uuid
          type: string
        characteristicIds:
          items:
            format: uuid
            type: string
          type: array
        status:
          $ref: "#/components/schemas/PropertyStatus"
        pdu:
          type: string
        probationDeliveryUnitId:
          format: uuid
          type: string
        turnaroundWorkingDayCount:
          type: integer
        name:
          type: string
      required:
      - addressLine1
      - characteristicIds
      - postcode
      - probationRegionId
      - status
      type: object
    UpdateAssessment:
      example:
        data:
          key: null
        releaseDate: 2000-01-23
        accommodationRequiredFromDate: 2000-01-23
      properties:
        data:
          additionalProperties:
            $ref: "#/components/schemas/AnyValue"
          type: object
        releaseDate:
          format: date
          type: string
        accommodationRequiredFromDate:
          format: date
          type: string
      required:
      - data
      type: object
    AssessmentAcceptance:
      example:
        apType: null
        requirements:
          desirableCriteria:
          - null
          - null
          essentialCriteria:
          - isPIPE
          - isPIPE
          gender: male
          location: B74
          type: normal
          radius: 0
        notes: notes
        document: "{}"
        placementDates:
          duration: 0
          expectedArrival: 2000-01-23
      properties:
        document:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
        requirements:
          $ref: "#/components/schemas/PlacementRequirements"
        placementDates:
          $ref: "#/components/schemas/PlacementDates"
        apType:
          $ref: "#/components/schemas/ApType"
        notes:
          type: string
      required:
      - document
      type: object
    AssessmentRejection:
      example:
        referralRejectionReasonId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isWithdrawn: true
        referralRejectionReasonDetail: referralRejectionReasonDetail
        document: "{}"
        rejectionRationale: rejectionRationale
      properties:
        document:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
        rejectionRationale:
          type: string
        referralRejectionReasonId:
          format: uuid
          type: string
        referralRejectionReasonDetail:
          type: string
        isWithdrawn:
          type: boolean
      required:
      - document
      - rejectionRationale
      type: object
    ClarificationNote:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        response: response
        query: query
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        responseReceivedOn: 2000-01-23
        createdByStaffMemberId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        responseReceivedOn:
          format: date
          type: string
        createdByStaffMemberId:
          format: uuid
          type: string
        query:
          type: string
        response:
          type: string
      required:
      - createdAt
      - createdByStaffMemberId
      - id
      - query
      type: object
    UpdatedClarificationNote:
      example:
        response: response
        responseReceivedOn: 2022-07-28
      properties:
        response:
          type: string
        responseReceivedOn:
          example: 2022-07-28
          format: date
          type: string
      required:
      - response
      - responseReceivedOn
      type: object
    NewClarificationNote:
      example:
        query: query
      properties:
        query:
          type: string
      required:
      - query
      type: object
    ReferralHistoryNote:
      discriminator:
        mapping:
          user: "#/components/schemas/ReferralHistoryUserNote"
          system: "#/components/schemas/ReferralHistorySystemNote"
          domainEvent: "#/components/schemas/ReferralHistoryDomainEventNote"
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdByUserName: createdByUserName
        messageDetails:
          isWithdrawn: true
          rejectionReason: rejectionReason
          domainEvent: "{}"
          rejectionReasonDetails: rejectionReasonDetails
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        message: message
        type: type
      properties:
        id:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        message:
          type: string
        messageDetails:
          $ref: "#/components/schemas/ReferralHistoryNoteMessageDetails"
        createdByUserName:
          type: string
        type:
          type: string
      required:
      - createdAt
      - createdByUserName
      - id
      - type
      type: object
    ReferralHistoryNoteMessageDetails:
      example:
        isWithdrawn: true
        rejectionReason: rejectionReason
        domainEvent: "{}"
        rejectionReasonDetails: rejectionReasonDetails
      properties:
        rejectionReason:
          type: string
        rejectionReasonDetails:
          type: string
        isWithdrawn:
          type: boolean
        domainEvent:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
      type: object
    ReferralHistoryDomainEventNote:
      allOf:
      - $ref: "#/components/schemas/ReferralHistoryNote"
      type: object
    ReferralHistoryUserNote:
      allOf:
      - $ref: "#/components/schemas/ReferralHistoryNote"
    ReferralHistorySystemNote:
      allOf:
      - $ref: "#/components/schemas/ReferralHistoryNote"
      - properties:
          category:
            enum:
            - submitted
            - unallocated
            - in_review
            - ready_to_place
            - rejected
            - completed
            type: string
        required:
        - category
        type: object
    NewReferralHistoryUserNote:
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
    NewReallocation:
      example:
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        userId:
          format: uuid
          type: string
      type: object
    Reallocation:
      example:
        taskType: Assessment
        user:
          telephoneNumber: telephoneNumber
          roles:
          - assessor
          - assessor
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cruManagementArea: ""
          cruManagementAreaDefault: ""
          isActive: true
          version: 0
          cruManagementAreaOverride: ""
          qualifications:
          - pipe
          - pipe
          apArea:
            identifier: LON
            name: Yorkshire & The Humber
            id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
          service: service
          permissions:
          - cas1_adhoc_booking_create
          - cas1_adhoc_booking_create
          deliusUsername: deliusUsername
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
      properties:
        user:
          $ref: "#/components/schemas/ApprovedPremisesUser"
        taskType:
          $ref: "#/components/schemas/TaskType"
      required:
      - taskType
      - user
      type: object
    ExternalUser:
      properties:
        id:
          format: uuid
          type: string
        username:
          example: CAS2_ASSESSOR_USER
          type: string
        name:
          example: Roger Smith
          type: string
        email:
          example: roger@external.example.com
          type: string
        origin:
          example: NACRO
          type: string
      required:
      - email
      - id
      - name
      - username
      type: object
    NomisUser:
      properties:
        id:
          format: uuid
          type: string
        name:
          example: Roger Smith
          type: string
        nomisUsername:
          example: SMITHR_GEN
          type: string
        email:
          example: Roger.Smith@justice.gov.uk
          type: string
        isActive:
          example: true
          type: boolean
      required:
      - id
      - isActive
      - name
      - nomisUsername
      type: object
    User:
      discriminator:
        mapping:
          CAS1: "#/components/schemas/ApprovedPremisesUser"
          CAS3: "#/components/schemas/TemporaryAccommodationUser"
        propertyName: service
      example:
        telephoneNumber: telephoneNumber
        service: service
        deliusUsername: deliusUsername
        name: name
        probationDeliveryUnit:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
        region:
          name: NPS North East Central Referrals
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
        email: email
      properties:
        service:
          type: string
        id:
          format: uuid
          type: string
        name:
          type: string
        deliusUsername:
          type: string
        email:
          type: string
        telephoneNumber:
          type: string
        isActive:
          type: boolean
        region:
          $ref: "#/components/schemas/ProbationRegion"
        probationDeliveryUnit:
          $ref: "#/components/schemas/ProbationDeliveryUnit"
      required:
      - deliusUsername
      - id
      - name
      - region
      - service
      type: object
    UserSummary:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    UserWithWorkload:
      allOf:
      - $ref: "#/components/schemas/User"
      - properties:
          numTasksPending:
            type: integer
          numTasksCompleted7Days:
            type: integer
          numTasksCompleted30Days:
            type: integer
          qualifications:
            items:
              $ref: "#/components/schemas/UserQualification"
            type: array
          roles:
            items:
              $ref: "#/components/schemas/ApprovedPremisesUserRole"
            type: array
          apArea:
            allOf:
            - $ref: "#/components/schemas/ApArea"
            deprecated: true
            description: This is deprecated. Used cruManagementArea instead as this
              is used to group task management
          cruManagementArea:
            allOf:
            - $ref: "#/components/schemas/NamedId"
        type: object
      example:
        telephoneNumber: telephoneNumber
        numTasksPending: 0
        roles:
        - assessor
        - assessor
        probationDeliveryUnit:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cruManagementArea: ""
        isActive: true
        qualifications:
        - pipe
        - pipe
        apArea: ""
        numTasksCompleted7Days: 6
        service: service
        deliusUsername: deliusUsername
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region:
          name: NPS North East Central Referrals
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
        email: email
        numTasksCompleted30Days: 1
    ApprovedPremisesUser:
      allOf:
      - $ref: "#/components/schemas/User"
      - properties:
          qualifications:
            items:
              $ref: "#/components/schemas/UserQualification"
            type: array
          roles:
            items:
              $ref: "#/components/schemas/ApprovedPremisesUserRole"
            type: array
          permissions:
            items:
              $ref: "#/components/schemas/ApprovedPremisesUserPermission"
            type: array
          apArea:
            $ref: "#/components/schemas/ApArea"
          cruManagementArea:
            allOf:
            - $ref: "#/components/schemas/NamedId"
            description: CRU Management Area to use. This will be the same as cruManagementAreaDefault
              unless cruManagementAreaOverride is defined
          cruManagementAreaDefault:
            allOf:
            - $ref: "#/components/schemas/NamedId"
            description: The CRU Management Area used if no override is defined. This
              is provided to support the user configuration page.
          cruManagementAreaOverride:
            allOf:
            - $ref: "#/components/schemas/NamedId"
            description: The CRU Management Area manually set on this user. This is
              provided to support the user configuration page.
          version:
            type: integer
        required:
        - apArea
        - cruManagementArea
        - cruManagementAreaDefault
        - qualifications
        - roles
        type: object
      example:
        telephoneNumber: telephoneNumber
        roles:
        - assessor
        - assessor
        probationDeliveryUnit:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cruManagementArea: ""
        cruManagementAreaDefault: ""
        isActive: true
        version: 0
        cruManagementAreaOverride: ""
        qualifications:
        - pipe
        - pipe
        apArea:
          identifier: LON
          name: Yorkshire & The Humber
          id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
        service: service
        permissions:
        - cas1_adhoc_booking_create
        - cas1_adhoc_booking_create
        deliusUsername: deliusUsername
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region:
          name: NPS North East Central Referrals
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
        email: email
    UserRolesAndQualifications:
      example:
        qualifications:
        - pipe
        - pipe
        roles:
        - assessor
        - assessor
      properties:
        roles:
          items:
            $ref: "#/components/schemas/ApprovedPremisesUserRole"
          type: array
        qualifications:
          items:
            $ref: "#/components/schemas/UserQualification"
          type: array
      required:
      - qualifications
      - roles
      type: object
    ProfileResponse:
      example:
        loadError: staff_record_not_found
        deliusUsername: deliusUsername
        user:
          telephoneNumber: telephoneNumber
          service: service
          deliusUsername: deliusUsername
          name: name
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
      properties:
        deliusUsername:
          type: string
        loadError:
          enum:
          - staff_record_not_found
          type: string
        user:
          $ref: "#/components/schemas/User"
      required:
      - deliusUsername
      type: object
    TemporaryAccommodationUser:
      allOf:
      - $ref: "#/components/schemas/User"
      - properties:
          roles:
            items:
              $ref: "#/components/schemas/TemporaryAccommodationUserRole"
            type: array
        required:
        - roles
        type: object
    ApprovedPremisesUserRole:
      enum:
      - assessor
      - matcher
      - future_manager
      - workflow_manager
      - cru_member
      - cru_member_find_and_book_beta
      - applicant
      - role_admin
      - report_viewer
      - excluded_from_assess_allocation
      - excluded_from_match_allocation
      - excluded_from_placement_application_allocation
      - appeals_manager
      - janitor
      - user_manager
      type: string
    ApprovedPremisesUserPermission:
      enum:
      - cas1_adhoc_booking_create
      - cas1_application_withdraw_others
      - cas1_assess_appealed_application
      - cas1_assess_application
      - cas1_assess_placement_application
      - cas1_assess_placement_request
      - cas1_booking_create
      - cas1_booking_change_dates
      - cas1_booking_withdraw
      - cas1_out_of_service_bed_create
      - cas1_process_an_appeal
      - cas1_user_list
      - cas1_user_management
      - cas1_view_assigned_assessments
      - cas1_view_cru_dashboard
      - cas1_view_manage_tasks
      - cas1_view_out_of_service_beds
      - cas1_request_for_placement_withdraw_others
      - cas1_space_booking_create
      - cas1_space_booking_list
      - cas1_space_booking_record_arrival
      - cas1_space_booking_record_departure
      - cas1_space_booking_record_non_arrival
      - cas1_space_booking_record_keyworker
      - cas1_space_booking_view
      - cas1_space_booking_withdraw
      - cas1_premises_view_capacity
      - cas1_premises_view_summary
      - cas1_reports_view
      type: string
    TemporaryAccommodationUserRole:
      enum:
      - assessor
      - referrer
      - reporter
      type: string
    UserQualification:
      enum:
      - pipe
      - lao
      - emergency
      - esap
      - recovery_focused
      - mental_health_specialist
      type: string
    ServiceName:
      enum:
      - approved-premises
      - cas2
      - temporary-accommodation
      type: string
      x-enum-varnames:
      - approvedPremises
      - cas2
      - temporaryAccommodation
    NewRoom:
      example:
        notes: notes
        name: name
        characteristicIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bedEndDate: 2024-03-30
      properties:
        name:
          type: string
        notes:
          type: string
        characteristicIds:
          items:
            format: uuid
            type: string
          type: array
        bedEndDate:
          description: "End date of the bed availability, open for availability if\
            \ not specified."
          example: 2024-03-30
          format: date
          type: string
      required:
      - characteristicIds
      - name
      type: object
    UpdateRoom:
      example:
        notes: notes
        name: name
        characteristicIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bedEndDate: 2024-03-30
      properties:
        notes:
          type: string
        characteristicIds:
          items:
            format: uuid
            type: string
          type: array
        name:
          type: string
        bedEndDate:
          description: "End date of the bed availability, open for availability if\
            \ not specified"
          example: 2024-03-30
          format: date
          type: string
      required:
      - characteristicIds
      type: object
    Room:
      example:
        characteristics:
        - propertyName: isCatered
          name: Is this premises catered (rather than self-catered)?
          serviceScope: approved-premises
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          modelScope: premises
        - propertyName: isCatered
          name: Is this premises catered (rather than self-catered)?
          serviceScope: approved-premises
          id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          modelScope: premises
        code: NEABC-4
        notes: notes
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        beds:
        - code: NEABC04
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bedEndDate: 2024-03-30
        - code: NEABC04
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bedEndDate: 2024-03-30
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        code:
          example: NEABC-4
          type: string
        notes:
          type: string
        beds:
          items:
            $ref: "#/components/schemas/Bed"
          type: array
        characteristics:
          items:
            $ref: "#/components/schemas/Characteristic"
          type: array
      required:
      - characteristics
      - id
      - name
      type: object
    Bed:
      example:
        code: NEABC04
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        bedEndDate: 2024-03-30
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        code:
          example: NEABC04
          type: string
        bedEndDate:
          description: "End date of the bed availability, open for availability if\
            \ not specified"
          example: 2024-03-30
          format: date
          type: string
      required:
      - id
      - name
      type: object
    BedSummary:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        roomName: roomName
        status: occupied
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        roomName:
          type: string
        status:
          $ref: "#/components/schemas/BedStatus"
      required:
      - id
      - name
      - roomName
      - status
      type: object
    BedDetail:
      allOf:
      - $ref: "#/components/schemas/BedSummary"
      - properties:
          characteristics:
            items:
              $ref: "#/components/schemas/CharacteristicPair"
            type: array
        required:
        - characteristics
        type: object
      example:
        characteristics:
        - propertyName: propertyName
          name: name
        - propertyName: propertyName
          name: name
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        roomName: roomName
        status: occupied
    BedStatus:
      enum:
      - occupied
      - available
      - out_of_service
      type: string
    PropertyStatus:
      enum:
      - pending
      - active
      - archived
      type: string
    OASysAssessmentId:
      description: "The ID of assessment being used. This should always be the latest\
        \ Layer 3 assessment, regardless of state."
      example: 138985987
      format: int64
      type: integer
    OASysSupportingInformationQuestion:
      example:
        answer: answer
        sectionNumber: 0
        linkedToReOffending: true
        label: label
        linkedToHarm: true
        questionNumber: questionNumber
      properties:
        label:
          type: string
        sectionNumber:
          type: integer
        questionNumber:
          type: string
        linkedToHarm:
          type: boolean
        linkedToReOffending:
          type: boolean
        answer:
          type: string
      required:
      - label
      - questionNumber
      type: object
    OASysQuestion:
      example:
        answer: answer
        label: label
        questionNumber: questionNumber
      properties:
        label:
          type: string
        questionNumber:
          type: string
        answer:
          type: string
      required:
      - label
      - questionNumber
      type: object
    ArrayOfOASysOffenceDetailsQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    ArrayOfOASysRiskContributorsQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    ArrayOfOASysRiskManagementQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    ArrayOfOASysRiskOfSeriousHarmSummaryQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    ArrayOfOASysRisksToTheIndividualQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    ArrayOfOASysRisksToOthersQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    ArrayOfOASysSupportingInformationQuestions:
      items:
        $ref: "#/components/schemas/OASysSupportingInformationQuestion"
      type: array
    ArrayOfOASysRiskToSelfQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    ArrayOfOASysRiskManagementPlanQuestions:
      items:
        $ref: "#/components/schemas/OASysQuestion"
      type: array
    OASysSections:
      example:
        roshSummary:
        - answer: answer
          label: label
          questionNumber: questionNumber
        - answer: answer
          label: label
          questionNumber: questionNumber
        riskToSelf:
        - answer: answer
          label: label
          questionNumber: questionNumber
        - answer: answer
          label: label
          questionNumber: questionNumber
        dateStarted: 2000-01-23T04:56:07.000+00:00
        dateCompleted: 2000-01-23T04:56:07.000+00:00
        offenceDetails:
        - answer: answer
          label: label
          questionNumber: questionNumber
        - answer: answer
          label: label
          questionNumber: questionNumber
        supportingInformation:
        - answer: answer
          sectionNumber: 0
          linkedToReOffending: true
          label: label
          linkedToHarm: true
          questionNumber: questionNumber
        - answer: answer
          sectionNumber: 0
          linkedToReOffending: true
          label: label
          linkedToHarm: true
          questionNumber: questionNumber
        assessmentId: 138985987
        assessmentState: Completed
        riskManagementPlan:
        - answer: answer
          label: label
          questionNumber: questionNumber
        - answer: answer
          label: label
          questionNumber: questionNumber
      properties:
        assessmentId:
          description: "The ID of assessment being used. This should always be the\
            \ latest Layer 3 assessment, regardless of state."
          example: 138985987
          format: int64
          type: integer
        assessmentState:
          $ref: "#/components/schemas/OASysAssessmentState"
        dateStarted:
          format: date-time
          type: string
        dateCompleted:
          format: date-time
          type: string
        offenceDetails:
          items:
            $ref: "#/components/schemas/OASysQuestion"
          type: array
        roshSummary:
          items:
            $ref: "#/components/schemas/OASysQuestion"
          type: array
        supportingInformation:
          items:
            $ref: "#/components/schemas/OASysSupportingInformationQuestion"
          type: array
        riskToSelf:
          items:
            $ref: "#/components/schemas/OASysQuestion"
          type: array
        riskManagementPlan:
          items:
            $ref: "#/components/schemas/OASysQuestion"
          type: array
      required:
      - assessmentId
      - assessmentState
      - dateStarted
      - offenceDetails
      - riskManagementPlan
      - riskToSelf
      - roshSummary
      - supportingInformation
      type: object
    OASysRiskToSelf:
      example:
        riskToSelf:
        - answer: answer
          label: label
          questionNumber: questionNumber
        - answer: answer
          label: label
          questionNumber: questionNumber
        dateStarted: 2000-01-23T04:56:07.000+00:00
        dateCompleted: 2000-01-23T04:56:07.000+00:00
        assessmentId: 138985987
        assessmentState: Completed
      properties:
        assessmentId:
          description: "The ID of assessment being used. This should always be the\
            \ latest Layer 3 assessment, regardless of state."
          example: 138985987
          format: int64
          type: integer
        assessmentState:
          $ref: "#/components/schemas/OASysAssessmentState"
        dateStarted:
          format: date-time
          type: string
        dateCompleted:
          format: date-time
          type: string
        riskToSelf:
          items:
            $ref: "#/components/schemas/OASysQuestion"
          type: array
      required:
      - assessmentId
      - assessmentState
      - dateStarted
      - riskToSelf
      type: object
    OASysRiskOfSeriousHarm:
      example:
        dateStarted: 2000-01-23T04:56:07.000+00:00
        dateCompleted: 2000-01-23T04:56:07.000+00:00
        rosh:
        - answer: answer
          label: label
          questionNumber: questionNumber
        - answer: answer
          label: label
          questionNumber: questionNumber
        assessmentId: 138985987
        assessmentState: Completed
      properties:
        assessmentId:
          description: "The ID of assessment being used. This should always be the\
            \ latest Layer 3 assessment, regardless of state."
          example: 138985987
          format: int64
          type: integer
        assessmentState:
          $ref: "#/components/schemas/OASysAssessmentState"
        dateStarted:
          format: date-time
          type: string
        dateCompleted:
          format: date-time
          type: string
        rosh:
          items:
            $ref: "#/components/schemas/OASysQuestion"
          type: array
      required:
      - assessmentId
      - assessmentState
      - dateStarted
      - rosh
      type: object
    OASysSection:
      example:
        name: Emotional wellbeing
        linkedToReOffending: true
        section: 10
        linkedToHarm: true
      properties:
        section:
          example: 10
          type: integer
        name:
          example: Emotional wellbeing
          type: string
        linkedToHarm:
          type: boolean
        linkedToReOffending:
          type: boolean
      required:
      - name
      - section
      type: object
    OASysAssessmentState:
      enum:
      - Completed
      - Incomplete
      type: string
    ActiveOffence:
      example:
        offenceId: M1502750438
        convictionId: 1502724704
        deliusEventNumber: "7"
        offenceDate: 2000-01-23
        offenceDescription: offenceDescription
      properties:
        deliusEventNumber:
          example: "7"
          type: string
        offenceDescription:
          type: string
        offenceId:
          example: M1502750438
          type: string
        convictionId:
          example: 1502724704
          format: int64
          type: integer
        offenceDate:
          format: date
          type: string
      required:
      - convictionId
      - deliusEventNumber
      - offenceDescription
      - offenceId
      type: object
    DocumentLevel:
      description: The level at which a Document is associated - i.e. to the Offender
        or to a specific Conviction
      enum:
      - Offender
      - Conviction
      type: string
    Document:
      description: Meta Info about a file relating to an Offender
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        fileName: fileName
        level: Offender
        description: description
        typeDescription: typeDescription
        id: id
        typeCode: typeCode
      properties:
        id:
          type: string
        level:
          $ref: "#/components/schemas/DocumentLevel"
        fileName:
          type: string
        createdAt:
          format: date-time
          type: string
        typeCode:
          type: string
        typeDescription:
          type: string
        description:
          type: string
      required:
      - createdAt
      - fileName
      - id
      - level
      - typeCode
      - typeDescription
      type: object
    PersonalTimeline:
      example:
        person:
          type: FullPerson
          crn: crn
        applications:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          timelineEvents:
          - occurredAt: 2000-01-23T04:56:07.000+00:00
            createdBy:
              telephoneNumber: telephoneNumber
              service: service
              deliusUsername: deliusUsername
              name: name
              probationDeliveryUnit:
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isActive: true
              region:
                name: NPS North East Central Referrals
                id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
              email: email
            associatedUrls:
            - type: application
              url: url
            - type: application
              url: url
            id: id
            type: approved_premises_application_submitted
            triggerSource: triggerSource
            content: content
          - occurredAt: 2000-01-23T04:56:07.000+00:00
            createdBy:
              telephoneNumber: telephoneNumber
              service: service
              deliusUsername: deliusUsername
              name: name
              probationDeliveryUnit:
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isActive: true
              region:
                name: NPS North East Central Referrals
                id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
              email: email
            associatedUrls:
            - type: application
              url: url
            - type: application
              url: url
            id: id
            type: approved_premises_application_submitted
            triggerSource: triggerSource
            content: content
          isOfflineApplication: true
          createdBy:
            telephoneNumber: telephoneNumber
            service: service
            deliusUsername: deliusUsername
            name: name
            probationDeliveryUnit:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
            region:
              name: NPS North East Central Referrals
              id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
            email: email
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: started
        - createdAt: 2000-01-23T04:56:07.000+00:00
          timelineEvents:
          - occurredAt: 2000-01-23T04:56:07.000+00:00
            createdBy:
              telephoneNumber: telephoneNumber
              service: service
              deliusUsername: deliusUsername
              name: name
              probationDeliveryUnit:
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isActive: true
              region:
                name: NPS North East Central Referrals
                id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
              email: email
            associatedUrls:
            - type: application
              url: url
            - type: application
              url: url
            id: id
            type: approved_premises_application_submitted
            triggerSource: triggerSource
            content: content
          - occurredAt: 2000-01-23T04:56:07.000+00:00
            createdBy:
              telephoneNumber: telephoneNumber
              service: service
              deliusUsername: deliusUsername
              name: name
              probationDeliveryUnit:
                name: name
                id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              isActive: true
              region:
                name: NPS North East Central Referrals
                id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
              email: email
            associatedUrls:
            - type: application
              url: url
            - type: application
              url: url
            id: id
            type: approved_premises_application_submitted
            triggerSource: triggerSource
            content: content
          isOfflineApplication: true
          createdBy:
            telephoneNumber: telephoneNumber
            service: service
            deliusUsername: deliusUsername
            name: name
            probationDeliveryUnit:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
            region:
              name: NPS North East Central Referrals
              id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
            email: email
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: started
      properties:
        person:
          $ref: "#/components/schemas/Person"
        applications:
          items:
            $ref: "#/components/schemas/ApplicationTimeline"
          type: array
      required:
      - applications
      - person
      type: object
    ApplicationTimeline:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        timelineEvents:
        - occurredAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            telephoneNumber: telephoneNumber
            service: service
            deliusUsername: deliusUsername
            name: name
            probationDeliveryUnit:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
            region:
              name: NPS North East Central Referrals
              id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
            email: email
          associatedUrls:
          - type: application
            url: url
          - type: application
            url: url
          id: id
          type: approved_premises_application_submitted
          triggerSource: triggerSource
          content: content
        - occurredAt: 2000-01-23T04:56:07.000+00:00
          createdBy:
            telephoneNumber: telephoneNumber
            service: service
            deliusUsername: deliusUsername
            name: name
            probationDeliveryUnit:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
            region:
              name: NPS North East Central Referrals
              id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
            email: email
          associatedUrls:
          - type: application
            url: url
          - type: application
            url: url
          id: id
          type: approved_premises_application_submitted
          triggerSource: triggerSource
          content: content
        isOfflineApplication: true
        createdBy:
          telephoneNumber: telephoneNumber
          service: service
          deliusUsername: deliusUsername
          name: name
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: started
      properties:
        id:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        isOfflineApplication:
          type: boolean
        status:
          $ref: "#/components/schemas/ApprovedPremisesApplicationStatus"
        createdBy:
          $ref: "#/components/schemas/User"
        timelineEvents:
          items:
            $ref: "#/components/schemas/TimelineEvent"
          type: array
      required:
      - createdAt
      - id
      - isOfflineApplication
      - timelineEvents
      type: object
    TimelineEvent:
      example:
        occurredAt: 2000-01-23T04:56:07.000+00:00
        createdBy:
          telephoneNumber: telephoneNumber
          service: service
          deliusUsername: deliusUsername
          name: name
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
        associatedUrls:
        - type: application
          url: url
        - type: application
          url: url
        id: id
        type: approved_premises_application_submitted
        triggerSource: triggerSource
        content: content
      properties:
        type:
          $ref: "#/components/schemas/TimelineEventType"
        id:
          type: string
        occurredAt:
          format: date-time
          type: string
        content:
          type: string
        createdBy:
          $ref: "#/components/schemas/User"
        associatedUrls:
          items:
            $ref: "#/components/schemas/TimelineEventAssociatedUrl"
          type: array
        triggerSource:
          $ref: "#/components/schemas/TriggerSourceType"
      type: object
    TimelineEventAssociatedUrl:
      example:
        type: application
        url: url
      properties:
        type:
          $ref: "#/components/schemas/TimelineEventUrlType"
        url:
          type: string
      required:
      - type
      - url
      type: object
    TimelineEventType:
      enum:
      - approved_premises_application_submitted
      - approved_premises_application_assessed
      - approved_premises_booking_made
      - approved_premises_person_arrived
      - approved_premises_person_not_arrived
      - approved_premises_person_departed
      - approved_premises_booking_not_made
      - approved_premises_booking_cancelled
      - approved_premises_booking_changed
      - approved_premises_booking_keyworker_assigned
      - approved_premises_application_withdrawn
      - approved_premises_application_expired
      - approved_premises_information_request
      - approved_premises_assessment_appealed
      - approved_premises_assessment_allocated
      - approved_premises_placement_application_withdrawn
      - approved_premises_placement_application_allocated
      - approved_premises_match_request_withdrawn
      - approved_premises_request_for_placement_created
      - approved_premises_request_for_placement_assessed
      - cas3_person_arrived
      - cas3_person_departed
      - application_timeline_note
      - cas2_application_submitted
      - cas2_note
      - cas2_status_update
      type: string
    TriggerSourceType:
      enum:
      - user
      - system
      type: string
    TimelineEventUrlType:
      enum:
      - application
      - booking
      - assessment
      - assessmentAppeal
      - cas1SpaceBooking
      type: string
    Cas2TimelineEvent:
      properties:
        type:
          $ref: "#/components/schemas/TimelineEventType"
        occurredAt:
          format: date-time
          type: string
        label:
          type: string
        body:
          type: string
        createdByName:
          type: string
      required:
      - createdByName
      - label
      - occurredAt
      - type
      type: object
    SeedRequest:
      example:
        fileName: fileName
        seedType: approved_premises
      properties:
        seedType:
          $ref: "#/components/schemas/SeedFileType"
        fileName:
          type: string
      required:
      - fileName
      - seedType
      type: object
    SeedFileType:
      enum:
      - approved_premises
      - approved_premises_rooms
      - temporary_accommodation_premises
      - temporary_accommodation_bedspace
      - user
      - nomis_users
      - external_users
      - cas2_applications
      - temporary_accommodation_users
      - approved_premises_users
      - characteristics
      - update_noms_number
      - update_users_from_api
      - approved_premises_ap_staff_users
      - approved_premises_cancel_bookings
      - approved_premises_assessment_more_info_bug_fix
      - approved_premises_redact_assessment_details
      - approved_premises_booking_to_space_booking
      - approved_premises_withdraw_placement_request
      - approved_premises_replay_domain_events
      - approved_premises_duplicate_application
      - approved_premises_update_event_number
      - approved_premises_link_booking_to_placement_request
      - approved_premises_out_of_service_beds
      - approved_premises_cru_management_areas
      - approved_premises_space_planning_dry_run
      - approved_premises_import_delius_booking_management_data
      - approved_premises_update_space_booking
      type: string
    MigrationJobRequest:
      example:
        jobType: update_all_users_from_community_api
      properties:
        jobType:
          $ref: "#/components/schemas/MigrationJobType"
      required:
      - jobType
      type: object
    MigrationJobType:
      enum:
      - update_all_users_from_community_api
      - update_sentence_type_and_situation
      - update_booking_status
      - update_task_due_dates
      - update_users_pdu_by_api
      - update_cas2_applications_with_assessments
      - update_cas2_status_updates_with_assessments
      - update_cas2_notes_with_assessments
      - update_cas1_fix_placement_app_links
      - update_cas1_notice_types
      - update_cas1_backfill_user_ap_area
      - update_cas3_application_offender_name
      - update_cas3_domain_event_type_for_person_departed_updated
      - update_cas1_applications_licence_expiry_date
      type: string
    PlacementDates:
      example:
        duration: 0
        expectedArrival: 2000-01-23
      properties:
        expectedArrival:
          format: date
          type: string
        duration:
          type: integer
      required:
      - duration
      - expectedArrival
      type: object
    PlacementRequirements:
      example:
        desirableCriteria:
        - null
        - null
        essentialCriteria:
        - isPIPE
        - isPIPE
        gender: male
        location: B74
        type: normal
        radius: 0
      properties:
        gender:
          $ref: "#/components/schemas/Gender"
        type:
          $ref: "#/components/schemas/ApType"
        location:
          example: B74
          type: string
        radius:
          type: integer
        essentialCriteria:
          items:
            $ref: "#/components/schemas/PlacementCriteria"
          type: array
        desirableCriteria:
          items:
            $ref: "#/components/schemas/PlacementCriteria"
          type: array
      required:
      - desirableCriteria
      - essentialCriteria
      - gender
      - location
      - radius
      - type
      type: object
    PlacementApplication:
      allOf:
      - $ref: "#/components/schemas/NewPlacementApplication"
      - properties:
          id:
            description: "If type is 'Additional', provides the PlacementApplication\
              \ ID. If type is 'Initial' this field provides a PlacementRequest ID."
            format: uuid
            type: string
          createdByUserId:
            format: uuid
            type: string
          schemaVersion:
            format: uuid
            type: string
          outdatedSchema:
            type: boolean
          createdAt:
            format: date-time
            type: string
          submittedAt:
            format: date-time
            type: string
          assessmentId:
            description: "If type is 'Additional', provides the PlacementApplication\
              \ ID. If type is 'Initial' this field shouldn't be used."
            format: uuid
            type: string
          assessmentCompletedAt:
            format: date-time
            type: string
          applicationCompletedAt:
            format: date-time
            type: string
          data:
            $ref: "#/components/schemas/AnyValue"
          document:
            $ref: "#/components/schemas/AnyValue"
          canBeWithdrawn:
            type: boolean
          isWithdrawn:
            type: boolean
          withdrawalReason:
            $ref: "#/components/schemas/WithdrawPlacementRequestReason"
          type:
            $ref: "#/components/schemas/PlacementApplicationType"
          placementDates:
            items:
              $ref: "#/components/schemas/PlacementDates"
            type: array
        required:
        - applicationCompletedAt
        - assessmentCompletedAt
        - assessmentId
        - canBeWithdrawn
        - createdAt
        - createdByUserId
        - id
        - isWithdrawn
        - outdatedScheme
        - placementDates
        - schemaVersion
        - type
        type: object
      example:
        createdByUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        schemaVersion: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        data: null
        document: null
        assessmentCompletedAt: 2000-01-23T04:56:07.000+00:00
        outdatedSchema: true
        type: Initial
        applicationCompletedAt: 2000-01-23T04:56:07.000+00:00
        placementDates:
        - duration: 0
          expectedArrival: 2000-01-23
        - duration: 0
          expectedArrival: 2000-01-23
        createdAt: 2000-01-23T04:56:07.000+00:00
        isWithdrawn: true
        withdrawalReason: DuplicatePlacementRequest
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        submittedAt: 2000-01-23T04:56:07.000+00:00
        canBeWithdrawn: true
        assessmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    NewPlacementApplication:
      example:
        applicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        applicationId:
          format: uuid
          type: string
      required:
      - applicationId
      type: object
    UpdatePlacementApplication:
      example:
        data:
          key: null
      properties:
        data:
          additionalProperties:
            $ref: "#/components/schemas/AnyValue"
          type: object
      required:
      - data
      type: object
    SubmitPlacementApplication:
      example:
        translatedDocument: "{}"
        placementType: rotl
        placementDates:
        - duration: 0
          expectedArrival: 2000-01-23
        - duration: 0
          expectedArrival: 2000-01-23
      properties:
        translatedDocument:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
        placementType:
          $ref: "#/components/schemas/PlacementType"
        placementDates:
          items:
            $ref: "#/components/schemas/PlacementDates"
          type: array
      required:
      - placementDates
      - placementType
      - translatedDocument
      type: object
    PlacementApplicationDecisionEnvelope:
      example:
        decision: accepted
        summaryOfChanges: summaryOfChanges
        decisionSummary: decisionSummary
      properties:
        decision:
          $ref: "#/components/schemas/PlacementApplicationDecision"
        summaryOfChanges:
          type: string
        decisionSummary:
          type: string
      required:
      - decision
      - decisionSummary
      - summaryOfChanges
      type: object
    PlacementApplicationDecision:
      enum:
      - accepted
      - rejected
      - withdraw
      - withdrawn_by_pp
      type: string
    PlacementType:
      enum:
      - rotl
      - release_following_decision
      - additional_placement
      type: string
    WithdrawPlacementApplication:
      example:
        reason: DuplicatePlacementRequest
      properties:
        reason:
          $ref: "#/components/schemas/WithdrawPlacementRequestReason"
      required:
      - reason
      type: object
    RequestForPlacement:
      example:
        createdByUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        createdAt: 2000-01-23T04:56:07.000+00:00
        isWithdrawn: true
        requestReviewedAt: 2000-01-23T04:56:07.000+00:00
        document: "{}"
        withdrawalReason: DuplicatePlacementRequest
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        submittedAt: 2000-01-23T04:56:07.000+00:00
        type: manual
        canBeDirectlyWithdrawn: true
        placementDates:
        - duration: 0
          expectedArrival: 2000-01-23
        - duration: 0
          expectedArrival: 2000-01-23
        status: request_unsubmitted
      properties:
        id:
          description: |
            If `type` is `"manual"`, provides the `PlacementApplication` ID.
            If `type` is `"automatic"` this field provides a `PlacementRequest` ID.
          format: uuid
          type: string
        createdByUserId:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        submittedAt:
          format: date-time
          type: string
        requestReviewedAt:
          description: |
            If `type` is `"manual"`, provides the value of `PlacementApplication.decisionMadeAt`.
            If `type` is `"automatic"` this field provides the value of `PlacementRequest.assessmentCompletedAt`.
          format: date-time
          type: string
        document:
          description: Any object that conforms to the current JSON schema for an
            application
          type: object
        canBeDirectlyWithdrawn:
          description: "If true, the user making this request can withdraw this request\
            \ for placement. \nIf false, it may still be possible to indirectly withdraw\
            \ this request for placement by withdrawing the application.\n"
          type: boolean
        isWithdrawn:
          type: boolean
        withdrawalReason:
          $ref: "#/components/schemas/WithdrawPlacementRequestReason"
        type:
          $ref: "#/components/schemas/RequestForPlacementType"
        placementDates:
          items:
            $ref: "#/components/schemas/PlacementDates"
          type: array
        status:
          $ref: "#/components/schemas/RequestForPlacementStatus"
      required:
      - canBeDirectlyWithdrawn
      - createdAt
      - createdByUserId
      - id
      - isWithdrawn
      - placementDates
      - status
      - type
      type: object
    RequestForPlacementType:
      enum:
      - manual
      - automatic
      type: string
    RequestForPlacementStatus:
      enum:
      - request_unsubmitted
      - request_rejected
      - request_submitted
      - awaiting_match
      - request_withdrawn
      - placement_booked
      - person_arrived
      - person_not_arrived
      - person_departed
      type: string
    PlacementRequest:
      allOf:
      - $ref: "#/components/schemas/PlacementRequirements"
      - $ref: "#/components/schemas/PlacementDates"
      - properties:
          id:
            format: uuid
            type: string
          person:
            $ref: "#/components/schemas/Person"
          risks:
            $ref: "#/components/schemas/PersonRisks"
          applicationId:
            format: uuid
            type: string
          assessmentId:
            format: uuid
            type: string
          releaseType:
            $ref: "#/components/schemas/ReleaseTypeOption"
          status:
            $ref: "#/components/schemas/PlacementRequestStatus"
          assessmentDecision:
            $ref: "#/components/schemas/AssessmentDecision"
          assessmentDate:
            format: date-time
            type: string
          applicationDate:
            format: date-time
            type: string
          assessor:
            $ref: "#/components/schemas/ApprovedPremisesUser"
          isParole:
            type: boolean
          notes:
            type: string
          booking:
            $ref: "#/components/schemas/BookingSummary"
          requestType:
            $ref: "#/components/schemas/PlacementRequestRequestType"
          isWithdrawn:
            type: boolean
          withdrawalReason:
            $ref: "#/components/schemas/WithdrawPlacementRequestReason"
        required:
        - applicationDate
        - applicationId
        - assessmentDate
        - assessmentDecision
        - assessmentId
        - assessor
        - id
        - isParole
        - isWithdrawn
        - person
        - releaseType
        - risks
        - status
        type: object
      example:
        desirableCriteria:
        - null
        - null
        booking:
          createdAt: 2000-01-23T04:56:07.000+00:00
          premisesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          premisesName: premisesName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          departureDate: 2000-01-23
          type: space
          arrivalDate: 2000-01-23
        notes: notes
        gender: male
        assessmentDate: 2000-01-23T04:56:07.000+00:00
        assessor:
          telephoneNumber: telephoneNumber
          roles:
          - assessor
          - assessor
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cruManagementArea: ""
          cruManagementAreaDefault: ""
          isActive: true
          version: 0
          cruManagementAreaOverride: ""
          qualifications:
          - pipe
          - pipe
          apArea:
            identifier: LON
            name: Yorkshire & The Humber
            id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
          service: service
          permissions:
          - cas1_adhoc_booking_create
          - cas1_adhoc_booking_create
          deliusUsername: deliusUsername
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
        type: normal
        duration: 6
        essentialCriteria:
        - isPIPE
        - isPIPE
        assessmentDecision: accepted
        releaseType: licence
        withdrawalReason: DuplicatePlacementRequest
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        radius: 0
        assessmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        requestType: parole
        isParole: true
        expectedArrival: 2000-01-23
        risks:
          mappa:
            value:
              lastUpdated: 2000-01-23
              level: level
            status: null
          tier:
            value:
              lastUpdated: 2000-01-23
              level: level
            status: null
          roshRisks:
            value:
              lastUpdated: 2000-01-23
              overallRisk: overallRisk
              riskToChildren: riskToChildren
              riskToPublic: riskToPublic
              riskToKnownAdult: riskToKnownAdult
              riskToStaff: riskToStaff
            status: retrieved
          flags:
            value:
            - value
            - value
            status: null
          crn: crn
        isWithdrawn: true
        person:
          type: FullPerson
          crn: crn
        location: B74
        applicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: notMatched
        applicationDate: 2000-01-23T04:56:07.000+00:00
    PlacementRequestRequestType:
      enum:
      - parole
      - standardRelease
      type: string
    PlacementRequestDetail:
      allOf:
      - $ref: "#/components/schemas/PlacementRequest"
      - properties:
          cancellations:
            deprecated: true
            description: Not used by UI. Space Booking cancellations to be provided
              if cancellations are required in future.
            items:
              $ref: "#/components/schemas/Cancellation"
            type: array
          application:
            $ref: "#/components/schemas/Application"
        required:
        - application
        - cancellations
        type: object
      example:
        desirableCriteria:
        - null
        - null
        booking:
          createdAt: 2000-01-23T04:56:07.000+00:00
          premisesId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          premisesName: premisesName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          departureDate: 2000-01-23
          type: space
          arrivalDate: 2000-01-23
        notes: notes
        gender: male
        assessmentDate: 2000-01-23T04:56:07.000+00:00
        assessor:
          telephoneNumber: telephoneNumber
          roles:
          - assessor
          - assessor
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cruManagementArea: ""
          cruManagementAreaDefault: ""
          isActive: true
          version: 0
          cruManagementAreaOverride: ""
          qualifications:
          - pipe
          - pipe
          apArea:
            identifier: LON
            name: Yorkshire & The Humber
            id: cd1c2d43-0b0b-4438-b0e3-d4424e61fb6a
          service: service
          permissions:
          - cas1_adhoc_booking_create
          - cas1_adhoc_booking_create
          deliusUsername: deliusUsername
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
        type: normal
        duration: 6
        essentialCriteria:
        - isPIPE
        - isPIPE
        assessmentDecision: accepted
        releaseType: licence
        withdrawalReason: DuplicatePlacementRequest
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        radius: 0
        assessmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        requestType: parole
        isParole: true
        cancellations:
        - date: 2000-01-23
          reason:
            name: Recall
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          otherReason: otherReason
          notes: notes
          premisesName: premisesName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - date: 2000-01-23
          reason:
            name: Recall
            serviceScope: serviceScope
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isActive: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          otherReason: otherReason
          notes: notes
          premisesName: premisesName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          bookingId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expectedArrival: 2000-01-23
        risks:
          mappa:
            value:
              lastUpdated: 2000-01-23
              level: level
            status: null
          tier:
            value:
              lastUpdated: 2000-01-23
              level: level
            status: null
          roshRisks:
            value:
              lastUpdated: 2000-01-23
              overallRisk: overallRisk
              riskToChildren: riskToChildren
              riskToPublic: riskToPublic
              riskToKnownAdult: riskToKnownAdult
              riskToStaff: riskToStaff
            status: retrieved
          flags:
            value:
            - value
            - value
            status: null
          crn: crn
        isWithdrawn: true
        application:
          createdAt: 2000-01-23T04:56:07.000+00:00
          person:
            type: FullPerson
            crn: crn
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        person:
          type: FullPerson
          crn: crn
        location: B74
        applicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: notMatched
        applicationDate: 2000-01-23T04:56:07.000+00:00
    PlacementRequestStatus:
      enum:
      - notMatched
      - unableToMatch
      - matched
      type: string
    PlacementCriteria:
      enum:
      - isPIPE
      - isESAP
      - isMHAPStJosephs
      - isMHAPElliottHouse
      - isSemiSpecialistMentalHealth
      - isRecoveryFocussed
      - hasBrailleSignage
      - hasTactileFlooring
      - hasHearingLoop
      - isStepFreeDesignated
      - isArsonDesignated
      - isWheelchairDesignated
      - isSingle
      - isCatered
      - isSuitedForSexOffenders
      - isSuitableForVulnerable
      - acceptsSexOffenders
      - acceptsHateCrimeOffenders
      - acceptsChildSexOffenders
      - acceptsNonSexualChildOffenders
      - isArsonSuitable
      - isGroundFloor
      - hasEnSuite
      type: string
    Gender:
      enum:
      - male
      - female
      type: string
    ApType:
      enum:
      - normal
      - pipe
      - esap
      - rfap
      - mhapStJosephs
      - mhapElliottHouse
      type: string
    BedSearchParameters:
      discriminator:
        mapping:
          approved-premises: "#/components/schemas/ApprovedPremisesBedSearchParameters"
          temporary-accommodation: "#/components/schemas/TemporaryAccommodationBedSearchParameters"
        propertyName: serviceName
      example:
        durationDays: 0
        serviceName: serviceName
        startDate: 2000-01-23
      properties:
        serviceName:
          type: string
        startDate:
          description: The date the Bed will need to be free from
          format: date
          type: string
        durationDays:
          description: The number of days the Bed will need to be free from the start_date
            until
          type: integer
      required:
      - durationDays
      - serviceName
      - startDate
      type: object
    ApprovedPremisesBedSearchParameters:
      allOf:
      - $ref: "#/components/schemas/BedSearchParameters"
      - properties:
          postcodeDistrict:
            description: The postcode district to search outwards from
            type: string
          maxDistanceMiles:
            description: "Maximum number of miles from the postcode district to search,\
              \ only required if more than 50 miles which is the default"
            type: integer
          requiredCharacteristics:
            items:
              $ref: "#/components/schemas/PlacementCriteria"
            type: array
        required:
        - maxDistanceMiles
        - postcodeDistrict
        - requiredCharacteristics
        type: object
    TemporaryAccommodationBedSearchParameters:
      allOf:
      - $ref: "#/components/schemas/BedSearchParameters"
      - properties:
          probationDeliveryUnits:
            description: The list of pdus Ids to search within
            items:
              format: uuid
              type: string
            type: array
          attributes:
            description: Bedspace and property attributes to filter on
            items:
              $ref: "#/components/schemas/BedSearchAttributes"
            type: array
        required:
        - probationDeliveryUnits
        type: object
    BedSearchResults:
      example:
        resultsBedCount: 1
        results:
        - bed:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          premises:
            characteristics:
            - propertyName: propertyName
              name: name
            - propertyName: propertyName
              name: name
            notes: notes
            bookedBedCount: 5
            town: town
            name: name
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            probationDeliveryUnitName: probationDeliveryUnitName
            bedCount: 5
          serviceName: approved-premises
          room:
            characteristics:
            - propertyName: propertyName
              name: name
            - propertyName: propertyName
              name: name
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - bed:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          premises:
            characteristics:
            - propertyName: propertyName
              name: name
            - propertyName: propertyName
              name: name
            notes: notes
            bookedBedCount: 5
            town: town
            name: name
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            probationDeliveryUnitName: probationDeliveryUnitName
            bedCount: 5
          serviceName: approved-premises
          room:
            characteristics:
            - propertyName: propertyName
              name: name
            - propertyName: propertyName
              name: name
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resultsRoomCount: 0
        resultsPremisesCount: 6
      properties:
        resultsRoomCount:
          description: How many distinct Rooms the Beds in the results belong to
          type: integer
        resultsPremisesCount:
          description: How many distinct Premises the Beds in the results belong to
          type: integer
        resultsBedCount:
          description: How many Beds are in the results
          type: integer
        results:
          items:
            $ref: "#/components/schemas/BedSearchResult"
          type: array
      required:
      - results
      - resultsBedCount
      - resultsPremisesCount
      - resultsRoomCount
      type: object
    BedSearchResult:
      discriminator:
        mapping:
          approved-premises: "#/components/schemas/ApprovedPremisesBedSearchResult"
          temporary-accommodation: "#/components/schemas/TemporaryAccommodationBedSearchResult"
        propertyName: serviceName
      example:
        bed:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        premises:
          characteristics:
          - propertyName: propertyName
            name: name
          - propertyName: propertyName
            name: name
          notes: notes
          bookedBedCount: 5
          town: town
          name: name
          postcode: postcode
          addressLine1: addressLine1
          addressLine2: addressLine2
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          probationDeliveryUnitName: probationDeliveryUnitName
          bedCount: 5
        serviceName: approved-premises
        room:
          characteristics:
          - propertyName: propertyName
            name: name
          - propertyName: propertyName
            name: name
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        serviceName:
          $ref: "#/components/schemas/ServiceName"
        premises:
          $ref: "#/components/schemas/BedSearchResultPremisesSummary"
        room:
          $ref: "#/components/schemas/BedSearchResultRoomSummary"
        bed:
          $ref: "#/components/schemas/BedSearchResultBedSummary"
      required:
      - bed
      - premises
      - room
      - serviceName
      type: object
    ApprovedPremisesBedSearchResult:
      allOf:
      - $ref: "#/components/schemas/BedSearchResult"
      - properties:
          distanceMiles:
            description: how many miles away from the postcode district the Premises
              this Bed belongs to is
            type: number
        required:
        - distanceMiles
        type: object
    TemporaryAccommodationBedSearchResult:
      allOf:
      - $ref: "#/components/schemas/BedSearchResult"
      - properties:
          overlaps:
            items:
              $ref: "#/components/schemas/TemporaryAccommodationBedSearchResultOverlap"
            type: array
        required:
        - overlaps
        type: object
    TemporaryAccommodationBedSearchResultOverlap:
      properties:
        name:
          type: string
        crn:
          type: string
        sex:
          type: string
        personType:
          $ref: "#/components/schemas/PersonType"
        days:
          type: integer
        bookingId:
          format: uuid
          type: string
        roomId:
          format: uuid
          type: string
        assessmentId:
          format: uuid
          type: string
      required:
      - bookingId
      - crn
      - days
      - name
      - personType
      - roomId
      type: object
    BedSearchResultPremisesSummary:
      example:
        characteristics:
        - propertyName: propertyName
          name: name
        - propertyName: propertyName
          name: name
        notes: notes
        bookedBedCount: 5
        town: town
        name: name
        postcode: postcode
        addressLine1: addressLine1
        addressLine2: addressLine2
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        probationDeliveryUnitName: probationDeliveryUnitName
        bedCount: 5
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
        probationDeliveryUnitName:
          type: string
        notes:
          type: string
        characteristics:
          items:
            $ref: "#/components/schemas/CharacteristicPair"
          type: array
        bedCount:
          description: the total number of Beds in the Premises
          type: integer
        bookedBedCount:
          description: the total number of booked Beds in the Premises
          type: integer
      required:
      - addressLine1
      - bedCount
      - characteristics
      - id
      - name
      - postcode
      type: object
    BedSearchResultRoomSummary:
      example:
        characteristics:
        - propertyName: propertyName
          name: name
        - propertyName: propertyName
          name: name
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        characteristics:
          items:
            $ref: "#/components/schemas/CharacteristicPair"
          type: array
      required:
      - characteristics
      - id
      - name
      type: object
    BedSearchResultBedSummary:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    CharacteristicPair:
      example:
        propertyName: propertyName
        name: name
      properties:
        propertyName:
          type: string
        name:
          type: string
      required:
      - name
      type: object
    SortOrder:
      enum:
      - ascending
      - descending
      type: string
    BookingStatus:
      enum:
      - arrived
      - awaiting-arrival
      - not-arrived
      - departed
      - cancelled
      - provisional
      - confirmed
      - closed
      type: string
    BookingSearchSortField:
      enum:
      - name
      - crn
      - startDate
      - endDate
      - createdAt
      type: string
      x-enum-varnames:
      - personName
      - personCrn
      - bookingStartDate
      - bookingEndDate
      - bookingCreatedAt
    BookingSearchResults:
      example:
        resultsCount: 0
        results:
        - bed:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          booking:
            createdAt: 2000-01-23T04:56:07.000+00:00
            endDate: 2000-01-23
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            startDate: 2000-01-23
            status: arrived
          person:
            name: name
            crn: crn
          premises:
            town: town
            name: name
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          room:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - bed:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          booking:
            createdAt: 2000-01-23T04:56:07.000+00:00
            endDate: 2000-01-23
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            startDate: 2000-01-23
            status: arrived
          person:
            name: name
            crn: crn
          premises:
            town: town
            name: name
            postcode: postcode
            addressLine1: addressLine1
            addressLine2: addressLine2
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          room:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        resultsCount:
          type: integer
        results:
          items:
            $ref: "#/components/schemas/BookingSearchResult"
          type: array
      required:
      - results
      - resultsCount
      type: object
    BookingSearchResult:
      example:
        bed:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        booking:
          createdAt: 2000-01-23T04:56:07.000+00:00
          endDate: 2000-01-23
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          startDate: 2000-01-23
          status: arrived
        person:
          name: name
          crn: crn
        premises:
          town: town
          name: name
          postcode: postcode
          addressLine1: addressLine1
          addressLine2: addressLine2
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        room:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        person:
          $ref: "#/components/schemas/BookingSearchResultPersonSummary"
        booking:
          $ref: "#/components/schemas/BookingSearchResultBookingSummary"
        premises:
          $ref: "#/components/schemas/BookingSearchResultPremisesSummary"
        room:
          $ref: "#/components/schemas/BookingSearchResultRoomSummary"
        bed:
          $ref: "#/components/schemas/BookingSearchResultBedSummary"
      required:
      - bed
      - booking
      - person
      - premises
      - room
      type: object
    BookingSearchResultPersonSummary:
      example:
        name: name
        crn: crn
      properties:
        name:
          type: string
        crn:
          type: string
      required:
      - crn
      type: object
    BookingSearchResultBookingSummary:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        endDate: 2000-01-23
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        startDate: 2000-01-23
        status: arrived
      properties:
        id:
          format: uuid
          type: string
        status:
          $ref: "#/components/schemas/BookingStatus"
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - createdAt
      - endDate
      - id
      - startDate
      - status
      type: object
    BookingSearchResultPremisesSummary:
      example:
        town: town
        name: name
        postcode: postcode
        addressLine1: addressLine1
        addressLine2: addressLine2
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        town:
          type: string
        postcode:
          type: string
      required:
      - addressLine1
      - id
      - name
      - postcode
      type: object
    BookingSearchResultRoomSummary:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    BookingSearchResultBedSummary:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    NewPlacementRequestBookingConfirmation:
      example:
        premisesName: premisesName
        departureDate: 2022-09-30
        arrivalDate: 2022-07-28
      properties:
        premisesName:
          type: string
        arrivalDate:
          example: 2022-07-28
          format: date
          type: string
        departureDate:
          example: 2022-09-30
          format: date
          type: string
      required:
      - arrivalDate
      - departureDate
      - premisesName
      type: object
    NewBedMove:
      properties:
        bedId:
          format: uuid
          type: string
        notes:
          type: string
      required:
      - bedId
      type: object
    NewBookingNotMade:
      example:
        notes: notes
      properties:
        notes:
          type: string
      type: object
    BookingNotMade:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        placementRequestId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        notes: notes
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        placementRequestId:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        notes:
          type: string
      required:
      - createdAt
      - id
      - placementRequestId
      type: object
    ProbationDeliveryUnit:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    ReferralRejectionReason:
      example:
        name: There was not enough time to place them
        serviceScope: serviceScope
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isActive: true
      properties:
        id:
          format: uuid
          type: string
        name:
          example: There was not enough time to place them
          type: string
        serviceScope:
          type: string
        isActive:
          type: boolean
      required:
      - id
      - isActive
      - name
      - serviceScope
      type: object
    CacheType:
      enum:
      - qCodeStaffMembers
      - userAccess
      - staffDetails
      - teamsManagingCase
      - ukBankHolidays
      - inmateDetails
      type: string
    PersonType:
      enum:
      - FullPerson
      - RestrictedPerson
      - UnknownPerson
      type: string
    FullPersonSummary:
      allOf:
      - $ref: "#/components/schemas/PersonSummary"
      - properties:
          name:
            type: string
          isRestricted:
            type: boolean
        required:
        - isRestricted
        - name
        type: object
    RestrictedPersonSummary:
      allOf:
      - $ref: "#/components/schemas/PersonSummary"
    UnknownPersonSummary:
      allOf:
      - $ref: "#/components/schemas/PersonSummary"
    PersonSummaryDiscriminator:
      enum:
      - FullPersonSummary
      - RestrictedPersonSummary
      - UnknownPersonSummary
      type: string
    Withdrawables:
      example:
        withdrawables:
        - dates:
          - endDate: 2000-01-23
            startDate: 2000-01-23
          - endDate: 2000-01-23
            startDate: 2000-01-23
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: application
        - dates:
          - endDate: 2000-01-23
            startDate: 2000-01-23
          - endDate: 2000-01-23
            startDate: 2000-01-23
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: application
        notes:
        - notes
        - notes
      properties:
        notes:
          items:
            type: string
          type: array
        withdrawables:
          items:
            $ref: "#/components/schemas/Withdrawable"
          type: array
      required:
      - notes
      - withdrawables
      type: object
    Withdrawable:
      example:
        dates:
        - endDate: 2000-01-23
          startDate: 2000-01-23
        - endDate: 2000-01-23
          startDate: 2000-01-23
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: application
      properties:
        id:
          format: uuid
          type: string
        type:
          $ref: "#/components/schemas/WithdrawableType"
        dates:
          description: "0, 1 or more dates can be specified depending upon the WithdrawableType"
          items:
            $ref: "#/components/schemas/DatePeriod"
          type: array
      required:
      - dates
      - id
      - type
      type: object
    DatePeriod:
      example:
        endDate: 2000-01-23
        startDate: 2000-01-23
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
      required:
      - endDate
      - startDate
      type: object
    WithdrawableType:
      enum:
      - application
      - booking
      - placement_application
      - placement_request
      - space_booking
      type: string
    WithdrawalReason:
      enum:
      - change_in_circumstances_new_application_to_be_submitted
      - error_in_application
      - duplicate_application
      - death
      - other_accommodation_identified
      - other
      type: string
    PlacementRequestSortField:
      enum:
      - duration
      - expected_arrival
      - created_at
      - application_date
      - request_type
      - person_name
      - person_risks_tier
      type: string
      x-enum-varnames:
      - duration
      - expectedArrival
      - createdAt
      - applicationSubmittedAt
    UserSortField:
      enum:
      - name
      type: string
      x-enum-varnames:
      - personName
    SortDirection:
      enum:
      - asc
      - desc
      type: string
    AllocatedFilter:
      enum:
      - allocated
      - unallocated
      type: string
    ApplicationSortField:
      enum:
      - tier
      - createdAt
      - arrivalDate
      - releaseType
      type: string
    RiskTierLevel:
      enum:
      - D0
      - D1
      - D2
      - D3
      - C0
      - C1
      - C2
      - C3
      - B0
      - B1
      - B2
      - B3
      - A0
      - A1
      - A2
      - A3
      type: string
    NewAppeal:
      example:
        appealDetail: appealDetail
        decision: accepted
        appealDate: 2000-01-23
        decisionDetail: decisionDetail
      properties:
        appealDate:
          format: date
          type: string
        appealDetail:
          type: string
        decision:
          $ref: "#/components/schemas/AppealDecision"
        decisionDetail:
          type: string
      required:
      - appealDate
      - appealDetail
      - decision
      - decisionDetail
      type: object
    Appeal:
      example:
        appealDetail: appealDetail
        createdAt: 2000-01-23T04:56:07.000+00:00
        decision: accepted
        createdByUser:
          telephoneNumber: telephoneNumber
          service: service
          deliusUsername: deliusUsername
          name: name
          probationDeliveryUnit:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isActive: true
          region:
            name: NPS North East Central Referrals
            id: 952790c0-21d7-4fd6-a7e1-9018f08d8bb0
          email: email
        appealDate: 2000-01-23
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        applicationId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        assessmentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        decisionDetail: decisionDetail
      properties:
        id:
          format: uuid
          type: string
        appealDate:
          format: date
          type: string
        appealDetail:
          type: string
        decision:
          $ref: "#/components/schemas/AppealDecision"
        decisionDetail:
          type: string
        createdAt:
          format: date-time
          type: string
        applicationId:
          format: uuid
          type: string
        assessmentId:
          format: uuid
          type: string
        createdByUser:
          $ref: "#/components/schemas/User"
      required:
      - appealDate
      - appealDetail
      - applicationId
      - createdAt
      - createdByUser
      - decision
      - decisionDetail
      - id
      type: object
    AppealDecision:
      enum:
      - accepted
      - rejected
      type: string
    Cas1ApplicationUserDetails:
      properties:
        name:
          type: string
        email:
          type: string
        telephoneNumber:
          type: string
      required:
      - name
      type: object
    Cas3ReportType:
      enum:
      - referral
      - booking
      - bedUsage
      - bedOccupancy
      - futureBookings
      - futureBookingsCsv
      - bookingGap
      type: string
    Cas2ReportName:
      enum:
      - submitted-applications
      - application-status-updates
      - unsubmitted-applications
      type: string
    NamedId:
      description: A generic stub for an object with a name and an ID.
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    Temporality:
      enum:
      - past
      - current
      - future
      type: string
    BedSearchAttributes:
      enum:
      - isSharedProperty
      - isSingleOccupancy
      - isWheelchairAccessible
      type: string
      x-enum-varnames:
      - SHARED_PROPERTY
      - SINGLE_OCCUPANCY
      - WHEELCHAIR_ACCESSIBLE
