/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.11.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package uk.gov.justice.digital.hmpps.approvedpremisesapi.controller.generated.cas1

import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import org.springframework.http.ResponseEntity
import org.springframework.web.bind.annotation.*
import uk.gov.justice.digital.hmpps.approvedpremisesapi.api.model.Cas1PersonalTimeline
import uk.gov.justice.digital.hmpps.approvedpremisesapi.api.model.Problem

@RestController
interface PeopleCas1 {

  fun getDelegate(): PeopleCas1Delegate = object : PeopleCas1Delegate {}

  @Operation(
    tags = ["People"],
    summary = "Returns a timeline of all applications for a Person.",
    operationId = "getPeopleApplicationsTimeline",
    description = """""",
    responses = [
      ApiResponse(
        responseCode = "200",
        description = "successful operation",
        content = [Content(schema = Schema(implementation = Cas1PersonalTimeline::class))],
      ),
      ApiResponse(
        responseCode = "401",
        description = "not authenticated",
        content = [Content(schema = Schema(implementation = Problem::class))],
      ),
      ApiResponse(
        responseCode = "403",
        description = "unauthorised",
        content = [Content(schema = Schema(implementation = Problem::class))],
      ),
      ApiResponse(
        responseCode = "404",
        description = "invalid CRN",
        content = [Content(schema = Schema(implementation = Problem::class))],
      ),
      ApiResponse(
        responseCode = "500",
        description = "unexpected error",
        content = [Content(schema = Schema(implementation = Problem::class))],
      ),
    ],
  )
  @RequestMapping(
    method = [RequestMethod.GET],
    value = ["/people/{crn}/timeline"],
    produces = ["application/json"],
  )
  fun getPeopleApplicationsTimeline(
    @Parameter(
      description = "CRN of the Person to fetch the timeline for",
      required = true,
    ) @PathVariable("crn") crn: kotlin.String,
  ): ResponseEntity<Cas1PersonalTimeline> {
    return getDelegate().getPeopleApplicationsTimeline(crn)
  }
}
