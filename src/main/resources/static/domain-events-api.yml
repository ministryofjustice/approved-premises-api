openapi: '3.0.1'
info:
  version: '0.1.0'
  title: 'AP Domain events'
  description: Get information about events in the Approved Premises domain
paths:
  /events/application-submitted/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An application-submitted event
      responses:
        '200':
          description: The application-submitted corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSubmittedEnvelope'
        404:
          description: No application-submitted event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/application-withdrawn/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An application-withdrawn event
      responses:
        '200':
          description: The application-withdrawn event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationWithdrawnEnvelope'
        404:
          description: No application-withdrawn event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/application-assessed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Apply' events"
      summary: An 'application-assessed' event
      responses:
        '200':
          description: The 'application-assessed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationAssessedEnvelope'
        404:
          description: No application-assessed event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-made/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'booking-made' event
      responses:
        '200':
          description: The 'booking-made' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingMadeEnvelope'
        404:
          description: No 'booking-made' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-extended/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'booking-extended' event
      responses:
        '200':
          description: The 'booking-extended' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingExtendedEnvelope'
        404:
          description: No 'booking-extended' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-cancelled/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'booking-cancelled' event
      responses:
        '200':
          description: The 'booking-cancelled' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingCancelledEnvelope'
        404:
          description: No 'booking-made' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/booking-not-made/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Match' events"
      summary: A 'booking-not-made' event
      responses:
        '200':
          description: The 'booking-not-made' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingNotMadeEnvelope'
        404:
          description: No 'booking-not-made' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/person-arrived/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'person-arrived' event
      responses:
        '200':
          description: The 'person-arrived' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonArrivedEnvelope'
        404:
          description: No 'person-arrived' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/person-not-arrived/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'person-not-arrived' event
      responses:
        '200':
          description: The 'person-not-arrived' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonNotArrivedEnvelope'
        404:
          description: No 'person-not-arrived' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
  /events/person-departed/{eventId}:
    parameters:
      - name: eventId
        description: UUID of the event
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventId'
    get:
      tags:
        - "'Mini-manage' events"
      summary: A 'person-departed' event
      responses:
        '200':
          description: The 'person-departed' event corresponding to the provided `eventId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDepartedEnvelope'
        404:
          description: No 'person-not-arrived' event found for the provided `eventId`
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          $ref: '#/components/responses/500Response'
components:
  schemas:
    EventId:
      description: The UUID of an event
      type: string
      format: uuid
      example: 364145f9-0af8-488e-9901-b4c46cd9ba37
    DeliusEventNumber:
      description: Used in Delius to identify the 'event' via the first active conviction's 'index'
      type: string
      example: "7"
    ApplicationId:
      description: The UUID of an application for an AP place
      type: string
      format: uuid
      example: 484b8b5e-6c3b-4400-b200-425bbe410713
    ApplicationUrl:
      description: The URL on the Approved Premises service at which a user can view a representation of an AP application and related resources, including bookings
      type: string
      example: https://approved-premises-dev.hmpps.service.justice.gov.uk/applications/484b8b5e-6c3b-4400-b200-425bbe410713
    BookingId:
      description: The UUID of booking for an AP place
      type: string
      format: uuid
      example: 14c80733-4b6d-4f35-b724-66955aac320c
    LegacyApCode:
      description: The 'Q code' used in Delius to identify an Approved Premises
      type: string
      example: Q057
    StaffMember:
      description: A member of probation or AP staff
      type: object
      properties:
        staffCode:
          type: string
          example: N54A999
        staffIdentifier:
          type: integer
          format: int64
          example: 1501234567
        forenames:
          type: string
          example: John
        surname:
          type: string
          example: Smith
        username:
          type: string
          example: JohnSmithNPS
      required:
        - staffCode
        - staffIdentifier
        - forenames
        - surname
    Cru:
      type: object
      properties:
        name:
          type: string
          example: NPS North East
      required:
        - name
    Ldu:
      type: object
      properties:
        code:
          type: string
          example: N54PPU
        name:
          type: string
          example: Public Protection NE
      required:
        - code
        - name
    Region:
      type: object
      properties:
        code:
          type: string
          example: NE
        name:
          type: string
          example: North East
      required:
        - code
        - name
    Team:
      type: object
      properties:
        code:
          type: string
          example: N54NGH
        name:
          type: string
          example: Gateshead 1
      required:
        - code
        - name
    ProbationArea:
      type: object
      properties:
        code:
          type: string
          example: N02
        name:
          type: string
          example: NPS North East
      required:
        - code
        - name
    PersonReference:
      type: object
      properties:
        crn:
          type: string
          example: C123456
        noms:
          type: string
          example: A1234ZX
      required:
        - crn
        - noms
    ApplicationSubmittedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.application.submitted
        eventDetails:
          $ref: '#/components/schemas/ApplicationSubmitted'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    ApplicationSubmitted:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        mappa:
          type: string
          example: 'CAT C3/LEVEL L2'
        sentenceLengthInMonths:
          type: integer
          example: 57
        offenceId:
          type: string
          example: 'AB43782'
        releaseType:
          type: string
          example: 'rotl'
        age:
          type: integer
          example: 43
        gender:
          type: string
          enum:
            - Male
            - Female
        targetLocation:
          type: string
          example: LS2
        submittedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        submittedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            probationArea:
              $ref: '#/components/schemas/ProbationArea'
            team:
              $ref: '#/components/schemas/Team'
            ldu:
              $ref: '#/components/schemas/Ldu'
            region:
              $ref: '#/components/schemas/Region'
          required:
            - staffMember
            - probationArea
            - cru
            - team
            - ldu
            - region
      required:
        - applicationId
        - applicationUrl
        - personReference
        - deliusEventNumber
        - offenceDescription
        - releaseType
        - age
        - gender
        - targetLocation
        - submittedAt
        - submittedBy
    ApplicationWithdrawnEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.application.withdrawn
        eventDetails:
          $ref: '#/components/schemas/ApplicationWithdrawn'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    ApplicationWithdrawn:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        withdrawnAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        withdrawnBy:
          $ref: '#/components/schemas/StaffMember'
        withdrawalReason:
          $ref: '#/components/schemas/CancellationReason'
      required:
        - applicationId
        - applicationUrl
        - personReference
        - deliusEventNumber
        - withdrawnAt
        - withdrawnBy
        - withdrawalReason
    ApplicationAssessedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.application.assessed
        eventDetails:
          $ref: '#/components/schemas/ApplicationAssessed'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    ApplicationAssessed:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        assessedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        assessedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            probationArea:
              $ref: '#/components/schemas/ProbationArea'
            cru:
              $ref: '#/components/schemas/Cru'
        decision:
          type: string
          example: Rejected
        decisionRationale:
          type: string
          example: Risk too low
      required:
        - applicationId
        - applicationUrl
        - personReference
        - deliusEventNumber
        - assessedAt
        - assessedBy
        - decision
    BookingMadeEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.booking.made
        eventDetails:
          $ref: '#/components/schemas/BookingMade'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingMade:
      type: object
      properties:
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        createdAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        bookedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            cru:
              $ref: '#/components/schemas/Cru'
        premises:
          $ref: '#/components/schemas/Premises'
        arrivalOn:
          type: string
          example: '2023-01-30'
          format: date
        departureOn:
          type: string
          example: '2023-04-30'
          format: date
      required:
        - applicationId
        - applicationUrl
        - bookingId
        - personReference
        - deliusEventNumber
        - createdAt
        - bookedBy
        - premises
        - arrivalOn
        - departureOn
    BookingNotMadeEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.booking.not-made
        eventDetails:
          $ref: '#/components/schemas/BookingNotMade'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingNotMade:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        attemptedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        attemptedBy:
          type: object
          properties:
            staffMember:
              $ref: '#/components/schemas/StaffMember'
            cru:
              $ref: '#/components/schemas/Cru'
        failureDescription:
          type: string
          example: No availability
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - attemptedAt
        - attemptedBy
        - failureDescription
    BookingCancelledEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.booking.cancelled
        eventDetails:
          $ref: '#/components/schemas/BookingCancelled'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingCancelled:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        cancelledAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        cancelledBy:
          $ref: '#/components/schemas/StaffMember'
        cancellationReason:
          $ref: '#/components/schemas/CancellationReason'
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - premises
        - cancelledAt
        - cancelledBy
        - cancellationReason
    BookingExtendedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.booking.extended
        eventDetails:
          $ref: '#/components/schemas/BookingExtended'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    BookingExtended:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        extendedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        extendedBy:
          $ref: '#/components/schemas/StaffMember'
        extensionReason:
          type: string
          example: There has been a flood at the housing association to which Mr Smith is moving
        previousDepartureOn:
          type: string
          example: '2023-01-30'
          format: date
        newDepartureOn:
          type: string
          example: '2023-02-12'
          format: date
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - premises
        - extendedAt
        - extendedBy
        - extensionReason
        - previousDepartureOn
        - newDepartureOn
    PersonArrivedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.person.arrived
        eventDetails:
          $ref: '#/components/schemas/PersonArrived'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PersonArrived:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        applicationSubmittedOn:
          type: string
          example: '2022-08-21T15:30:00Z'
          format: date-time
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        arrivedAt:
          type: string
          example: '2022-11-30T14:51:30'
          format: date-time
        expectedDepartureOn:
          type: string
          example: '2023-02-28'
          format: date
        notes:
          type: string
          example: Arrived a day late due to rail strike. Informed in advance by COM.
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - applicationSubmittedOn
        - bookingId
        - premises
        - keyWorker
        - arrivedAt
        - expectedDepartureOn
    PersonNotArrivedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.person.not-arrived
        eventDetails:
          $ref: '#/components/schemas/PersonNotArrived'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PersonNotArrived:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        premises:
          $ref: '#/components/schemas/Premises'
        expectedArrivalOn:
          type: string
          example: '2022-11-29'
          format: date
        recordedBy:
          $ref: '#/components/schemas/StaffMember'
        notes:
          type: string
          example: We learnt that Mr Smith is in hospital.
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - premises
        - expectedArrivalOn
        - recordedBy
    PersonDepartedEnvelope:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EventId'
        timestamp:
          type: string
          example: '2022-11-30T14:53:44'
          format: date-time
        eventType:
          type: string
          example: approved-premises.person.departed
        eventDetails:
          $ref: '#/components/schemas/PersonDeparted'
      required:
        - id
        - timestamp
        - eventType
        - eventDetails
    PersonDeparted:
      type: object
      properties:
        personReference:
          $ref: '#/components/schemas/PersonReference'
        deliusEventNumber:
          $ref: '#/components/schemas/DeliusEventNumber'
        applicationId:
          $ref: '#/components/schemas/ApplicationId'
        applicationUrl:
          $ref: '#/components/schemas/ApplicationUrl'
        bookingId:
          $ref: '#/components/schemas/BookingId'
        keyWorker:
          $ref: '#/components/schemas/StaffMember'
        premises:
          $ref: '#/components/schemas/Premises'
        departedAt:
          type: string
          example: '2023-03-30T14:51:30'
          format: date-time
        reason:
          type: string
          enum:
            - Absconded, still at large
            - Admitted to Hospital
            - Arrested, remanded in custody, or sentenced
            - Bed Withdrawn
            - Breach / recall (abscond)
            - Breach / recall (behaviour / increasing risk)
            - Breach / recall (curfew)
            - Breach / recall (house rules)
            - Breach / recall (licence or bail condition)
            - Breach / recall (other)
            - Breach / recall (positive drugs test)
            - Died
            - End of ROTL
            - Left of own volition
            - Order / licence expired
            - Other
            - Planned move-on
        legacyReasonCode:
          type: string
          enum:
            - J
            - Q
            - H
            - X
            - A
            - D
            - F
            - B
            - E
            - G
            - C
            - P
            - V
            - K
            - N
            - W
            - O
        destination:
          type: object
          properties:
            premises:
              $ref: '#/components/schemas/DestinationPremises'
            moveOnCategory:
              $ref: '#/components/schemas/MoveOnCategory'
            destinationProvider:
              $ref: '#/components/schemas/DestinationProvider'
      required:
        - personReference
        - deliusEventNumber
        - applicationId
        - applicationUrl
        - bookingId
        - keyWorker
        - premises
        - departedAt
        - reason
        - legacyReasonCode
        - destination
    Premises:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Hope House
        apCode:
          type: string
          example: NEHOPE1
        legacyApCode:
          $ref: '#/components/schemas/LegacyApCode'
        localAuthorityAreaName:
          type: string
      required:
        - id
        - name
        - apCode
        - legacyApCode
        - localAuthorityAreaName
    DestinationPremises:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: New Place
        apCode:
          type: string
          example: NENEW1
        legacyApCode:
          type: string
          example: Q061
        probationArea:
          $ref: '#/components/schemas/ProbationArea'
      required:
        - id
        - name
        - apCode
        - legacyApCode
        - probationArea
    CancellationReason:
      type: object
      properties:
        description:
          type: string
          enum:
            - Custodial disposal - RIC
            - Offer Withdrawn
            - Other
            - Parole Licence not granted
            - Withdrawn by Referrer
        legacyCancellationCode:
          type: string
          enum:
            - 1H
            - B
            - D
            - 4I
            - C
      required:
        - description
        - legacyCancellationCode
    MoveOnCategory:
      type: object
      properties:
        description:
          type: string
          enum:
            - B&B / Temp / Short-Term Housing
            - Custody
            - Deported/ Detention Centre/IRC
            - Housing Association - Rented
            - Living with Family/ Partner/ Other
            - Local Authority - Rented
            - No Fixed Abode
            - Not Applicable
            - Owner Occupied
            - Private Rented
            - Supported Housing
            - Transferred to different AP
        legacyMoveOnCategoryCode:
          type: string
          enum:
            - MC05
            - MC19
            - MC10
            - MC03
            - MC07
            - MC02
            - MC14
            - MCNA
            - MC08
            - MC04
            - MC06
            - P
        code:
          type: string
          example: ABC123
      required:
        - description
        - legacyMoveOnCategoryCode
        - code
    DestinationProvider:
      type: object
      properties:
        description:
          type: string
          example: Ext - North East Region
        code:
          type: string
          example: XYZ456
      required:
        - description
        - code
    Problem:
      type: object
      properties:
        type:
          type: string
          example: https://example.net/validation-error
        title:
          type: string
          example: Invalid request parameters
        status:
          type: integer
          example: 400
        detail:
          type: string
          example: You provided invalid request parameters
        instance:
          type: string
          example: f7493e12-546d-42c3-b838-06c12671ab5b
