#!/bin/bash

# Array of repository names to loop through
REPO_NAMES=(
  "hmpps-temporary-accommodation-ui"
  "hmpps-community-accommodation-tier-2-ui"
  "hmpps-approved-premises-ui"
)

# Replace with your GitHub App's private key and App ID
PRIVATE_KEY=$GITHUB_APP_PRIVATE_KEY
APP_ID=$GITHUB_APP_ID

# Get the current timestamp (issued at time)
IAT=$(date +%s)

# Set the expiration time (10 minutes from now)
EXP=$(($IAT + 600))

# Create the JWT payload in JSON format
PAYLOAD=$(jq -n \
  --arg iat "$IAT" \
  --arg exp "$EXP" \
  --arg iss "$APP_ID" \
  '{
    iat: ($iat | tonumber),
    exp: ($exp | tonumber),
    iss: $iss
  }')

# Create the JWT header (base64url encoded)
HEADER='{
  "alg": "RS256",
  "typ": "JWT"
}'

# Create a temporary file for the private key
echo "$PRIVATE_KEY" > private_key.pem
echo "$PRIVATE_KEY"
# Generate the JWT using jwt-cli with the private key
JWT=$(echo "$PAYLOAD" | jwt sign --key private_key.pem --alg RS256)

# Clean up the private key file (for security reasons)
rm private_key.pem

# Use curl to request the access token from the GitHub API
GITHUB_ACCESS_TOKEN=$(curl -s -X POST \
  -H "Authorization: Bearer $JWT" \
  -H "Accept: application/vnd.github.v3+json" \
  "https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens" | jq -r .token)

echo $GITHUB_ACCESS_TOKEN

# Check if the token was obtained successfully
if [ -z "$GITHUB_ACCESS_TOKEN" ] || [ "$GITHUB_ACCESS_TOKEN" == "Bad credentials" ]; then
  echo "Failed to obtain GitHub access token."
  exit 1
fi

# Loop through each repository
for REPO in "${REPO_NAMES[@]}"
do

# Define the GitHub API URL and the JWT token (you need to have this from the earlier step)
  GITHUB_API_URL="https://api.github.com/repos"
  WORKFLOW_PATH="actions/workflows/generate-types.yml/dispatches"

  # Construct the full API URL for the current repository
    API_URL="${GITHUB_API_URL}/${REPO}/${WORKFLOW_PATH}"

  # Trigger the GitHub Actions workflow using curl
  curl -X POST \
    -H "Authorization: token $GITHUB_ACCESS_TOKEN" \
    -H "Accept: application/vnd.github.v3+json" \
    $API_URL \
    -d '{"ref":"main"}'

  # Capture the exit code of curl
  CURL_EXIT_CODE=$?

  # Check if curl was successful
  if [ $? -ne 0 ]; then
    echo "Failed to trigger workflow for repository: $REPO"
    exit 1
  else
    echo "Successfully triggered workflow for repository: $REPO"
  fi
done
